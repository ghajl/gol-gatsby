{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/containers/Main.js","webpack:///./src/components/Main.jsx","webpack:///./src/components/SelectButtonsBar.jsx","webpack:///./src/components/Select.jsx","webpack:///./src/components/PlayButtonsBar.jsx","webpack:///./src/containers/SpeedSlider.jsx","webpack:///./src/containers/Generation.jsx"],"names":["_react","_interopRequireDefault","__webpack_require__","_withRoot","_layout","_Main","l","e","__esModule","default","u","createElement","t","5850","n","Object","defineProperty","value","r","_reactRedux","_actions","connect","_ref","running","currentSize","cells","currentPattern","dispatch","changePattern","index","changeBoardSize","size","incrementGeneration","setRunning","name","setSpeed","fps","setClear","saveCells","Main","_propTypes","_styles","_gatsby","_CircularProgress","_Game","_SelectButtonsBar","_PlayButtonsBar","f","p","assign","arguments","length","prototype","hasOwnProperty","call","apply","this","h","Symbol","iterator","constructor","m","Array","isArray","toString","from","TypeError","y","enumerable","configurable","writable","key","b","setPrototypeOf","getPrototypeOf","__proto__","g","v","ReferenceError","w","WrappedComponent","props","_this","_getPrototypeOf","_defineProperty","_assertThisInitialized","game","handleWindowSizeChange","main","getCellCount","then","Date","now","rAF","requestAnimationFrame","run","boards","width","height","squareSize","label","params","patterns","boardWidth","boardHeight","Game","state","loading","Component","window","addEventListener","setState","ratio","devicePixelRatio","drawBoard","canvas","removeEventListener","cancelAnimationFrame","liveCellsList","getLiveCells","interval","stop","drawCell","start","_this$props","data","_toConsumableArray","concat","setPattern","_this$props2","reload","clear","updateOnce","cellCount","update","_this2","delta","_this3","_this$props3","classes","isRunning","className","container","menu","wrapper","patternIndex","parameters","onPatternChange","handlePatternChange","sizeIndex","onBoardSizeChange","handleBoardSizeChange","verticalMenu","direction","canvasControls","canvasReplacementWrapper","canvasReplacement","progressWrapper","thickness","ref","onClick","handleClick","on","handlePlayToggle","step","setInterval","withStyles","textAlign","marginTop","zIndex","paddingLeft","paddingRight","display","@media (min-width: 1280px)","@media (orientation: landscape) and (max-width: 1280px)","padding","verticalAlign","paddingBottom","position","top","bottom","left","right","overflow","background","transform","animation","StaticQuery","query","render","patternlist","allPattern","edges","map","item","node","_extends","_","propTypes","PropTypes","func","isRequired","shape","bool","arrayOf","number","defaultProps","5852","exports","pattern","5853","_Select","SelectButtonsBar","sizeItems","patternItems","style","items","onChange","s","maxWidth","string","5854","_List","_ListItem","_ListItemText","_Menu","_MenuItem","d","Select","event","open","anchorEl","currentTarget","options","button","_this$state","root","handleClickListItem","primary","secondary","id","onClose","handleRequestClose","transitionDuration","option","i","selected","handleMenuItemClick","_icons","_IconButton","_SpeedSlider","_Generation","_ToggleIcon","_colors","PlayButtonsBar","bar","controls","title","onIcon","PlayArrow","icon","offIcon","Pause","SkipNext","Clear","slider","generation","theme","_vertical","color","BUTTON","vertical","breakpoints","up","margin","justifyContent","marginLeft","align","marginRight","_rcSlider","Handle","offset","handleStyle","cursor","borderRadius","border","borderColor","backgroundColor","sliderStyle","handle","_ref2","a","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","SpeedSlider","min","max","_ref3","styles","GENERATION","fontSize","Generation"],"mappings":"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","file":"component---src-pages-index-jsx-b4dafcc074d40bd6a272.js","sourcesContent":["import React from 'react';\r\nimport withRoot from '../withRoot';\r\nimport Layout from '../components/layout';\r\nimport Main from '../containers/Main';\r\n\r\nconst MainPage = () => (\r\n  <Layout>\r\n    <Main />\r\n  </Layout>\r\n);\r\n\r\nexport default withRoot(MainPage);\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  changePattern, changeBoardSize, incrementGeneration, setRunning, setSpeed, setClear, saveCells,\r\n} from '../actions';\r\nimport Main from '../components/Main';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changePattern: (index) => {\r\n    dispatch(changePattern(index));\r\n  },\r\n  changeBoardSize: (size) => {\r\n    dispatch(changeBoardSize(size));\r\n  },\r\n  incrementGeneration: () => {\r\n    dispatch(incrementGeneration());\r\n  },\r\n  setRunning: (running, name) => {\r\n    dispatch(setRunning(running, name));\r\n  },\r\n  setSpeed: (fps) => {\r\n    dispatch(setSpeed(fps));\r\n  },\r\n  setClear: () => {\r\n    dispatch(setClear());\r\n  },\r\n  saveCells: (cells) => {\r\n    dispatch(saveCells(cells));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  running, currentSize, cells, currentPattern,\r\n}) => ({\r\n  running, currentSize, cells, currentPattern,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Game from '../game/Game';\r\nimport SelectButtonsBar from './SelectButtonsBar';\r\nimport PlayButtonsBar from './PlayButtonsBar';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '80px',\r\n    zIndex: 2,\r\n  },\r\n  wrapper: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  game: {\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    '@media (min-width: 1280px)': {\r\n      width: '50%',\r\n    },\r\n  },\r\n  menu: {\r\n    display: 'block',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  verticalMenu: {\r\n    display: 'none',\r\n    width: '25%',\r\n    padding: 2,\r\n    verticalAlign: 'top',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  canvasControls: {\r\n    display: 'block',\r\n    width: '100%',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n      width: '70%',\r\n    },\r\n  },\r\n  canvasReplacementWrapper: {\r\n    paddingBottom: '56.25%',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  canvasReplacement: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: 'hidden',\r\n    background: '#eee',\r\n  },\r\n  progressWrapper: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  loading: {\r\n    position: 'relative',\r\n    animation: 'mui-progress-circular-dash 3s ease infinite',\r\n  },\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boards = [\r\n      {\r\n        name: 'small',\r\n        width: 30,\r\n        height: 20,\r\n        squareSize: 24,\r\n        label: '20 X 30',\r\n      },\r\n      {\r\n        name: 'medium',\r\n        width: 60,\r\n        height: 40,\r\n        squareSize: 12,\r\n        label: '40 X 60',\r\n      },\r\n      {\r\n        name: 'large',\r\n        width: 90,\r\n        height: 60,\r\n        squareSize: 8,\r\n        label: '60 X 90',\r\n      },\r\n    ];\r\n    const params = this.boards[props.currentSize];\r\n    this.patterns = [\r\n      {\r\n        name: 'random',\r\n        label: 'Random',\r\n      },\r\n    ];\r\n    this.boardWidth = params.width;\r\n    this.boardHeight = params.height;\r\n    this.squareSize = params.squareSize;\r\n    this.game = new Game(this.boardWidth, this.boardHeight, this.squareSize, props.cells);\r\n    this.setRunning = running => props.setRunning(running, 'main');\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      window.addEventListener('resize', this.handleWindowSizeChange);\r\n      this.setState({ loading: false });\r\n      const ratio = window.devicePixelRatio || 1;\r\n      this.game.drawBoard(this.canvas, ratio);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    cancelAnimationFrame(this.rAF);\r\n    const liveCellsList = this.game.getLiveCells();\r\n    const { saveCells } = this.props;\r\n    saveCells(liveCellsList);\r\n  }\r\n\r\n  setInterval(value) {\r\n    const { setSpeed } = this.props;\r\n    this.interval = 1000 / value;\r\n    setSpeed(value);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.game.handleWindowSizeChange();\r\n  };\r\n\r\n\r\n  start = () => {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.then = Date.now();\r\n      this.setRunning(true);\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    }\r\n    this.game.drawCell(e);\r\n  }\r\n\r\n  handlePlayToggle() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n\r\n  handlePatternChange(index) {\r\n    const { currentPattern, data, changePattern } = this.props;\r\n    if (index !== currentPattern) {\r\n      this.stop();\r\n      const patterns = [...this.patterns, ...data];\r\n      this.game.setPattern(index, patterns);\r\n      changePattern(index);\r\n    }\r\n  }\r\n\r\n  handleBoardSizeChange(index) {\r\n    const { currentSize, changeBoardSize } = this.props;\r\n    if (index !== currentSize) {\r\n      this.stop();\r\n      const params = this.boards[index];\r\n      this.boardWidth = params.width;\r\n      this.boardHeight = params.height;\r\n      this.squareSize = params.squareSize;\r\n      this.game.reload(this.boardWidth, this.boardHeight, this.squareSize, this.canvas);\r\n      changeBoardSize(index);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.setRunning(false);\r\n      cancelAnimationFrame(this.rAF);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!(this.game.getCellCount() === 0)) {\r\n      const { setClear } = this.props;\r\n      this.stop();\r\n      setClear();\r\n      this.game.clear();\r\n    }\r\n  }\r\n\r\n  step() {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.updateOnce();\r\n    }\r\n  }\r\n\r\n  updateOnce() {\r\n    const { incrementGeneration } = this.props;\r\n    const cellCount = this.game.update();\r\n    incrementGeneration();\r\n    return cellCount;\r\n  }\r\n\r\n  run() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.then;\r\n    let cellCount;\r\n    if (this.delta > this.interval) {\r\n      this.then = this.now - (this.delta % this.interval);\r\n      cellCount = this.updateOnce();\r\n    }\r\n    if (cellCount === 0) {\r\n      this.stop();\r\n    } else {\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes, running, currentPattern, data, currentSize,\r\n    } = this.props;\r\n    const { loading } = this.state;\r\n    const patterns = [...this.patterns, ...data];\r\n    const isRunning = running.main || false;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.game}>\r\n          <div className={classes.menu}>\r\n            <div className={classes.wrapper}>\r\n              <SelectButtonsBar\r\n                patternIndex={currentPattern}\r\n                patterns={patterns}\r\n                parameters={this.boards}\r\n                onPatternChange={index => this.handlePatternChange(index)}\r\n                sizeIndex={currentSize}\r\n                onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.verticalMenu}>\r\n            <SelectButtonsBar\r\n              patternIndex={currentPattern}\r\n              patterns={patterns}\r\n              parameters={this.boards}\r\n              onPatternChange={index => this.handlePatternChange(index)}\r\n              sizeIndex={currentSize}\r\n              onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              direction=\"column\"\r\n            />\r\n          </div>\r\n          <div className={classes.canvasControls}>\r\n            <div className={classes.wrapper}>\r\n              {loading\r\n                && (\r\n                  <div\r\n                    className={classes.canvasReplacementWrapper}\r\n                  >\r\n                    <div className={classes.canvasReplacement}>\r\n                      <div className={classes.progressWrapper}>\r\n                        <CircularProgress\r\n                          size={30}\r\n                          thickness={22}\r\n                          className={classes.loading}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <canvas\r\n                height={0}\r\n                ref={(canvas) => { this.canvas = canvas; }}\r\n                onClick={e => this.handleClick(e)}\r\n              />\r\n            </div>\r\n            <div className=\"controls\">\r\n              <PlayButtonsBar\r\n                on={!isRunning}\r\n                handlePlayToggle={() => this.handlePlayToggle()}\r\n                step={() => this.step()}\r\n                clear={() => this.clear()}\r\n                setInterval={v => this.setInterval(v)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = WrappedComponent => props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPattern {\r\n          edges {\r\n            node {\r\n              name,\r\n              pattern,\r\n              label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data) => {\r\n      const patternlist = data.allPattern.edges.map(item => item.node);\r\n      return (\r\n        <WrappedComponent data={patternlist} {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default withData(withStyles(styles)(Main));\r\n\r\nMain.propTypes = {\r\n  setRunning: PropTypes.func.isRequired,\r\n  running: PropTypes.shape({\r\n    main: PropTypes.bool,\r\n  }),\r\n  classes: PropTypes.shape({}),\r\n  cells: PropTypes.arrayOf(PropTypes.PropTypes.arrayOf(PropTypes.number)),\r\n  data: PropTypes.arrayOf(PropTypes.shape({})),\r\n  changePattern: PropTypes.func.isRequired,\r\n  changeBoardSize: PropTypes.func.isRequired,\r\n  incrementGeneration: PropTypes.func.isRequired,\r\n  setSpeed: PropTypes.func.isRequired,\r\n  setClear: PropTypes.func.isRequired,\r\n  saveCells: PropTypes.func.isRequired,\r\n  currentPattern: PropTypes.number,\r\n  currentSize: PropTypes.number,\r\n};\r\n\r\nMain.defaultProps = {\r\n  classes: {},\r\n  running: {\r\n    main: false,\r\n  },\r\n  currentPattern: 0,\r\n  currentSize: 1,\r\n  data: [],\r\n  cells: null,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Select from './Select';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  item: {\r\n    width: '50%',\r\n    display: 'inline-block',\r\n    maxWidth: 360,\r\n  },\r\n};\r\n\r\nconst SelectButtonsBar = ({\r\n  classes,\r\n  direction,\r\n  patternIndex,\r\n  parameters,\r\n  patterns,\r\n  onPatternChange,\r\n  sizeIndex,\r\n  onBoardSizeChange,\r\n}) => {\r\n  const sizeItems = parameters.map(size => size.label);\r\n  const patternItems = patterns.map(pattern => pattern.label);\r\n  const width = direction === 'column' ? '100%' : null;\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.item} style={{ width }}>\r\n        <Select\r\n          index={patternIndex}\r\n          items={patternItems}\r\n          onChange={onPatternChange}\r\n          label=\"Pattern\"\r\n        />\r\n      </div>\r\n      <div className={classes.item} style={{ width }}>\r\n        <Select\r\n          index={sizeIndex}\r\n          items={sizeItems}\r\n          onChange={onBoardSizeChange}\r\n          label=\"Board Size\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SelectButtonsBar);\r\n\r\nSelectButtonsBar.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  direction: PropTypes.string,\r\n  patternIndex: PropTypes.number.isRequired,\r\n  patterns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  onPatternChange: PropTypes.func.isRequired,\r\n  sizeIndex: PropTypes.number.isRequired,\r\n  parameters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  onBoardSizeChange: PropTypes.func.isRequired,\r\n};\r\n\r\nSelectButtonsBar.defaultProps = {\r\n  direction: 'row',\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nclass Select extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = [];\r\n    if (typeof props.items !== 'undefined') {\r\n      this.options = [...props.items];\r\n    }\r\n    this.button = undefined;\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  handleClickListItem = (event) => {\r\n    this.setState({ open: true, anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index) => {\r\n    const { onChange } = this.props;\r\n    this.setState({ open: false });\r\n    onChange(index);\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes, items, index, label,\r\n    } = this.props;\r\n    const { anchorEl, open } = this.state;\r\n    this.options.length = 0;\r\n    if (typeof items !== 'undefined') {\r\n      this.options = [...items];\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={this.handleClickListItem}\r\n          >\r\n            {index < 0\r\n              ? (\r\n                <ListItemText\r\n                  primary={label}\r\n                  secondary=\"\"\r\n                />\r\n              )\r\n              : (\r\n                <ListItemText\r\n                  primary={label}\r\n                  secondary={this.options[index]}\r\n                />\r\n              )\r\n            }\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={this.handleRequestClose}\r\n          transitionDuration={250}\r\n        >\r\n          {this.options.map((option, i) => (\r\n            <MenuItem\r\n              key={option}\r\n              selected={i === index}\r\n              onClick={event => this.handleMenuItemClick(event, i)}\r\n            >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Select);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  PlayArrow, Pause, Clear, SkipNext,\r\n} from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SpeedSlider from '../containers/SpeedSlider';\r\nimport Generation from '../containers/Generation';\r\nimport ToggleIcon from './ToggleIcon';\r\nimport color from '../util/colors';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: color.BUTTON,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  vertical: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: 10,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  bar: {\r\n    margin: 5,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  slider: {\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n  },\r\n  generation: {\r\n    align: 'flex-end',\r\n    marginTop: 5,\r\n    marginRight: 15,\r\n    transform: 'skew(-10deg)',\r\n  },\r\n});\r\n\r\nconst PlayButtonsBar = ({\r\n  classes, on, handlePlayToggle, step, clear, setInterval,\r\n}) => (\r\n  <div className={classes.bar}>\r\n    <div className={classes.controls}>\r\n      <div className={classes.item}>\r\n        <IconButton\r\n          className={classes.button}\r\n          title={on ? 'Start' : 'Pause'}\r\n          onClick={handlePlayToggle}\r\n        >\r\n          <ToggleIcon\r\n            on={on}\r\n            onIcon={<PlayArrow className={classes.icon} />}\r\n            offIcon={<Pause className={classes.icon} />}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <IconButton className={classes.button} title=\"Next Generation\" onClick={step}>\r\n          <SkipNext className={classes.icon} />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <IconButton className={classes.button} title=\"Clear\" onClick={clear}>\r\n          <Clear className={classes.icon} />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.slider} title=\"Set Speed\">\r\n        <SpeedSlider onChange={setInterval} />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div className={classes.generation} title=\"Generation\">\r\n        <Generation />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(PlayButtonsBar);\r\n\r\nPlayButtonsBar.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  handlePlayToggle: PropTypes.func.isRequired,\r\n  on: PropTypes.bool.isRequired,\r\n  step: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  setInterval: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'rc-slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Handle = ({ offset }) => {\r\n  const handleStyle = {\r\n    position: 'absolute',\r\n    transform: 'translate(-35%, -35%)',\r\n    width: '15px',\r\n    height: '15px',\r\n    cursor: 'pointer',\r\n    borderRadius: '50%',\r\n    border: 'solid 3px',\r\n    borderColor: 'rgba(0, 0, 0, .7)',\r\n    backgroundColor: 'white',\r\n    left: `${offset}%`,\r\n  };\r\n  return (\r\n    <div style={handleStyle} />\r\n  );\r\n};\r\n\r\nHandle.propTypes = {\r\n  offset: PropTypes.number.isRequired,\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: 60,\r\n};\r\n\r\nconst handle = ({ fps, ...props }) => (\r\n  <Handle value={fps} style={{ borderColor: 'black' }} {...props} />\r\n);\r\n\r\nclass SpeedSlider extends Component {\r\n  componentDidMount() {\r\n    const { onChange, fps } = this.props;\r\n    onChange(fps);\r\n  }\r\n\r\n  render() {\r\n    const { onChange, fps } = this.props;\r\n\r\n    return (\r\n      <div style={sliderStyle}>\r\n        <Slider\r\n          min={2}\r\n          max={160}\r\n          step={2}\r\n          value={fps}\r\n          onChange={onChange}\r\n          handle={handle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ fps }) => ({ fps });\r\n\r\nexport default (connect(mapStateToProps)(SpeedSlider));\r\n\r\nSpeedSlider.propTypes = {\r\n  fps: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport color from '../util/colors';\r\n\r\nconst styles = {\r\n  generation: {\r\n    color: color.GENERATION,\r\n    fontSize: '1.5em',\r\n    textAlign: 'right',\r\n  },\r\n};\r\n\r\nconst Generation = ({ classes, generation }) => (\r\n  <div className={classes.generation}>\r\n    {generation}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = ({ generation }) => ({ generation });\r\n\r\nexport default (connect(mapStateToProps)(withStyles(styles)(Generation)));\r\n\r\nGeneration.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  generation: PropTypes.number.isRequired,\r\n};\r\n"],"sourceRoot":""}