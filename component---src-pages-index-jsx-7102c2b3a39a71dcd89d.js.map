{"version":3,"sources":["webpack:///./src/containers/Main.js","webpack:///./src/components/Main.jsx","webpack:///./src/components/SelectButtonsBar.js","webpack:///./src/components/Select.js","webpack:///./src/components/PlayButtonsBar.jsx","webpack:///./src/components/SpeedSlider.js","webpack:///./src/components/Generation.js","webpack:///./src/pages/index.jsx"],"names":["r","_reactRedux","__webpack_require__","_actions","_Main","__esModule","default","l","connect","_ref","running","currentSize","cells","currentPattern","dispatch","changePattern","index","changeBoardSize","size","incrementGeneration","setRunning","name","setSpeed","fps","setClear","saveCells","Main","_react","_propTypes","_interopRequireDefault","_styles","_gatsby","_CircularProgress","_Game","_SelectButtonsBar","_PlayButtonsBar","d","e","p","Object","assign","t","arguments","length","n","prototype","hasOwnProperty","call","apply","this","h","Symbol","iterator","constructor","m","Array","isArray","toString","from","TypeError","b","enumerable","configurable","writable","defineProperty","key","y","setPrototypeOf","getPrototypeOf","__proto__","g","v","ReferenceError","O","value","WrappedComponent","props","_this","_getPrototypeOf","_defineProperty","_assertThisInitialized","game","handleWindowSizeChange","main","getCellCount","then","Date","now","rAF","requestAnimationFrame","run","boards","width","height","squareSize","label","params","patterns","boardWidth","boardHeight","Game","state","loading","Component","window","addEventListener","setState","ratio","devicePixelRatio","drawBoard","canvas","removeEventListener","cancelAnimationFrame","liveCellsList","getLiveCells","interval","stop","drawCell","start","_this$props","data","_toConsumableArray","concat","setPattern","_this$props2","reload","clear","updateOnce","update","_this2","delta","_this3","_this$props3","classes","isRunning","canvasStyle","display","createElement","className","container","menu","wrapper","patternIndex","parameters","onPatternChange","handlePatternChange","sizeIndex","onBoardSizeChange","handleBoardSizeChange","verticalMenu","direction","canvasControls","canvasReplacementWrapper","canvasReplacement","progressWrapper","thickness","circleIndeterminate","animation","style","ref","onClick","handleClick","on","handlePlayToggle","step","setInterval","withStyles","textAlign","marginTop","zIndex","paddingLeft","paddingRight","@media (min-width: 1280px)","@media (orientation: landscape) and (max-width: 1280px)","padding","verticalAlign","paddingBottom","position","top","bottom","left","right","overflow","background","transform","StaticQuery","query","render","patternlist","allPattern","edges","map","item","node","_extends","_","propTypes","PropTypes","func","isRequired","shape","bool","arrayOf","number","defaultProps","_Select","o","SelectButtonsBar","a","i","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","sizeItems","patternItems","pattern","items","onChange","s","theme","maxWidth","object","string","justify","patternNamesIndex","patternNames","array","changePatternEvent","patternLabel","gridSizesIndex","gridSizes","changeBoardSizeEventHandler","gridLabel","_List","_ListItem","_ListItemText","_Menu","_MenuItem","f","Select","anchorEl","open","event","currentTarget","options","push","root","button","handleClickListItem","primary","secondary","id","onClose","handleRequestClose","transitionDuration","option","selected","handleMenuItemClick","_icons","_IconButton","_SpeedSlider","_Generation","_ToggleIcon","_colors","PlayButtonsBar","bar","controls","title","onIcon","PlayArrow","icon","offIcon","Pause","SkipNext","Clear","slider","generation","_vertical","color","BUTTON","vertical","breakpoints","up","margin","justifyContent","marginLeft","align","marginRight","_rcSlider","u","c","create","handleStyle","cursor","borderRadius","border","borderColor","backgroundColor","Handle","offset","sliderStyle","handle","Props","SpeedSlider","min","max","_ref2","Generation","jsx","global","GENERATION","_withRoot","_layout"],"mappings":"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","file":"component---src-pages-index-jsx-7102c2b3a39a71dcd89d.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport {\r\n  changePattern, changeBoardSize, incrementGeneration, setRunning, setSpeed, setClear, saveCells,\r\n} from '../actions';\r\nimport Main from '../components/Main';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changePattern: (index) => {\r\n    dispatch(changePattern(index));\r\n  },\r\n  changeBoardSize: (size) => {\r\n    dispatch(changeBoardSize(size));\r\n  },\r\n  incrementGeneration: () => {\r\n    dispatch(incrementGeneration());\r\n  },\r\n  setRunning: (running, name) => {\r\n    dispatch(setRunning(running, name));\r\n  },\r\n  setSpeed: (fps) => {\r\n    dispatch(setSpeed(fps));\r\n  },\r\n  setClear: () => {\r\n    dispatch(setClear());\r\n  },\r\n  saveCells: (cells) => {\r\n    dispatch(saveCells(cells));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  running, currentSize, cells, currentPattern,\r\n}) => ({\r\n  running, currentSize, cells, currentPattern,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Game from '../game/Game';\r\nimport SelectButtonsBar from './SelectButtonsBar';\r\nimport PlayButtonsBar from './PlayButtonsBar';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '80px',\r\n    zIndex: 2,\r\n  },\r\n  wrapper: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  game: {\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    '@media (min-width: 1280px)': {\r\n      width: '50%',\r\n    },\r\n  },\r\n  menu: {\r\n    display: 'block',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  verticalMenu: {\r\n    display: 'none',\r\n    width: '25%',\r\n    padding: 2,\r\n    verticalAlign: 'top',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  canvasControls: {\r\n    display: 'block',\r\n    width: '100%',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n      width: '70%',\r\n    },\r\n  },\r\n  canvasReplacementWrapper: {\r\n    paddingBottom: '56.25%',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  canvasReplacement: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: 'hidden',\r\n    background: '#eee',\r\n  },\r\n  progressWrapper: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  loading: {\r\n    position: 'relative',\r\n  },\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boards = [\r\n      {\r\n        name: 'small',\r\n        width: 30,\r\n        height: 20,\r\n        squareSize: 24,\r\n        label: '20 X 30',\r\n      },\r\n      {\r\n        name: 'medium',\r\n        width: 60,\r\n        height: 40,\r\n        squareSize: 12,\r\n        label: '40 X 60',\r\n      },\r\n      {\r\n        name: 'large',\r\n        width: 90,\r\n        height: 60,\r\n        squareSize: 8,\r\n        label: '60 X 90',\r\n      },\r\n    ];\r\n    const params = this.boards[props.currentSize];\r\n    this.patterns = [\r\n      {\r\n        name: 'random',\r\n        label: 'Random',\r\n      },\r\n    ];\r\n    this.boardWidth = params.width;\r\n    this.boardHeight = params.height;\r\n    this.squareSize = params.squareSize;\r\n    this.game = new Game(this.boardWidth, this.boardHeight, this.squareSize, props.cells);\r\n    this.setRunning = running => props.setRunning(running, 'main');\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      window.addEventListener('resize', this.handleWindowSizeChange);\r\n      this.setState({ loading: false });\r\n      const ratio = window.devicePixelRatio || 1;\r\n      this.game.drawBoard(this.canvas, ratio);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    cancelAnimationFrame(this.rAF);\r\n    const liveCellsList = this.game.getLiveCells();\r\n    const { saveCells } = this.props;\r\n    saveCells(liveCellsList);\r\n  }\r\n\r\n  setInterval(value) {\r\n    const { setSpeed } = this.props;\r\n    this.interval = 1000 / value;\r\n    setSpeed(value);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.game.handleWindowSizeChange();\r\n  };\r\n\r\n\r\n  start = () => {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.then = Date.now();\r\n      this.setRunning(true);\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    }\r\n    this.game.drawCell(e);\r\n  }\r\n\r\n  handlePlayToggle() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n\r\n  handlePatternChange(index) {\r\n    const { currentPattern, data, changePattern } = this.props;\r\n    if (index !== currentPattern) {\r\n      this.stop();\r\n      const patterns = [...this.patterns, ...data];\r\n      this.game.setPattern(index, patterns);\r\n      changePattern(index);\r\n    }\r\n  }\r\n\r\n  handleBoardSizeChange(index) {\r\n    const { currentSize, changeBoardSize } = this.props;\r\n    if (index !== currentSize) {\r\n      this.stop();\r\n      const params = this.boards[index];\r\n      this.boardWidth = params.width;\r\n      this.boardHeight = params.height;\r\n      this.squareSize = params.squareSize;\r\n      this.game.reload(this.boardWidth, this.boardHeight, this.squareSize, this.canvas);\r\n      changeBoardSize(index);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.setRunning(false);\r\n      cancelAnimationFrame(this.rAF);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!(this.game.getCellCount() === 0)) {\r\n      const { setClear } = this.props;\r\n      this.stop();\r\n      setClear();\r\n      this.game.clear();\r\n    }\r\n  }\r\n\r\n  step() {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.updateOnce();\r\n    }\r\n  }\r\n\r\n  updateOnce() {\r\n    const { incrementGeneration } = this.props;\r\n    this.game.update();\r\n    incrementGeneration();\r\n  }\r\n\r\n  run() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.then;\r\n    if (this.delta > this.interval) {\r\n      this.then = this.now - (this.delta % this.interval);\r\n      this.updateOnce();\r\n    }\r\n    this.rAF = requestAnimationFrame(() => {\r\n      this.run();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes, running, currentPattern, data, currentSize,\r\n    } = this.props;\r\n    const { loading } = this.state;\r\n    const patterns = [...this.patterns, ...data];\r\n    const isRunning = running.main || false;\r\n    const canvasStyle = { display: loading ? 'none' : 'block' };\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.game}>\r\n          <div className={classes.menu}>\r\n            <div className={classes.wrapper}>\r\n              <SelectButtonsBar\r\n                patternIndex={currentPattern}\r\n                patterns={patterns}\r\n                parameters={this.boards}\r\n                onPatternChange={index => this.handlePatternChange(index)}\r\n                sizeIndex={currentSize}\r\n                onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.verticalMenu}>\r\n            <SelectButtonsBar\r\n              patternIndex={currentPattern}\r\n              patterns={patterns}\r\n              parameters={this.boards}\r\n              onPatternChange={index => this.handlePatternChange(index)}\r\n              sizeIndex={currentSize}\r\n              onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              direction=\"column\"\r\n            />\r\n          </div>\r\n          <div className={classes.canvasControls}>\r\n            <div className={classes.wrapper}>\r\n              {loading\r\n                && (\r\n                  <div\r\n                    className={classes.canvasReplacementWrapper}\r\n                  >\r\n                    <div className={classes.canvasReplacement}>\r\n                      <div className={classes.progressWrapper}>\r\n                        <CircularProgress\r\n                          size={30}\r\n                          thickness={22}\r\n                          className={classes.loading}\r\n                          classes={{\r\n                            circleIndeterminate: {\r\n                              animation: 'mui-progress-circular-dash 3s ease infinite',\r\n                            },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <div style={canvasStyle}>\r\n                <canvas\r\n                  ref={(canvas) => { this.canvas = canvas; }}\r\n                  onClick={e => this.handleClick(e)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"controls\">\r\n              <PlayButtonsBar\r\n                on={!isRunning}\r\n                handlePlayToggle={() => this.handlePlayToggle()}\r\n                step={() => this.step()}\r\n                clear={() => this.clear()}\r\n                setInterval={v => this.setInterval(v)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = WrappedComponent => props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPattern {\r\n          edges {\r\n            node {\r\n              name,\r\n              pattern,\r\n              label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data) => {\r\n      const patternlist = data.allPattern.edges.map(item => item.node);\r\n      return (\r\n        <WrappedComponent data={patternlist} {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default withData(withStyles(styles)(Main));\r\n\r\nMain.propTypes = {\r\n  setRunning: PropTypes.func.isRequired,\r\n  running: PropTypes.shape({\r\n    main: PropTypes.bool,\r\n  }),\r\n  classes: PropTypes.shape({}),\r\n  cells: PropTypes.func.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.shape({})),\r\n  changePattern: PropTypes.func.isRequired,\r\n  changeBoardSize: PropTypes.func.isRequired,\r\n  incrementGeneration: PropTypes.func.isRequired,\r\n  setSpeed: PropTypes.func.isRequired,\r\n  setClear: PropTypes.func.isRequired,\r\n  saveCells: PropTypes.func.isRequired,\r\n  currentPattern: PropTypes.number,\r\n  currentSize: PropTypes.number,\r\n};\r\n\r\nMain.defaultProps = {\r\n  classes: {},\r\n  running: {\r\n    main: false,\r\n  },\r\n  currentPattern: 0,\r\n  currentSize: 1,\r\n  data: [],\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from './Select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  item: {\r\n    width:'50%',\r\n    display: 'inline-block',\r\n    maxWidth: 360,\r\n  },\r\n})\r\n\r\nconst SelectButtonsBar = ({direction, ...props}) => {\r\n  const sizeItems = props.parameters.map(size => size.label);\r\n  const patternItems = props.patterns.map(pattern => pattern.label);\r\n  const width = direction == 'column' ? '100%' : null;\r\n  return (\r\n    <div className={props.classes.container} >\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.patternIndex}\r\n          items={patternItems}\r\n          onChange={(index) => props.onPatternChange(index)}\r\n          label=\"Pattern\"\r\n        />\r\n      </div>\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.sizeIndex}\r\n          items={sizeItems}\r\n          onChange={(index) => props.onBoardSizeChange(index)}\r\n          label=\"Board Size\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SelectButtonsBar);\r\n\r\nSelectButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  direction: PropTypes.string,\r\n  justify: PropTypes.string,\r\n  patternNamesIndex: PropTypes.number.isRequired,\r\n  patternNames: PropTypes.array.isRequired,\r\n  changePatternEvent: PropTypes.func.isRequired,\r\n  patternLabel: PropTypes.string.isRequired,\r\n  gridSizesIndex: PropTypes.number.isRequired,\r\n  gridSizes: PropTypes.array.isRequired,\r\n  changeBoardSizeEventHandler: PropTypes.func.isRequired,\r\n  gridLabel: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  },\r\n};\r\n\r\nclass Select extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.options = [];\r\n    if(typeof props.items !== 'undefined'){\r\n      for(let i=0;i<props.items.length;i++){\r\n        this.options.push(props.items[i]);\r\n      }         \r\n    }\r\n  }\r\n\r\n  state = {\r\n    anchorEl: undefined,\r\n    open: false,\r\n  };\r\n\r\n  button = undefined;\r\n\r\n  handleClickListItem = event => {\r\n    this.setState({ open: true, anchorEl: event.currentTarget, });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index) => {\r\n    this.setState({open: false});\r\n    this.props.onChange(index);\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    this.options.length = 0;\r\n    if (typeof this.props.items !== 'undefined') {\r\n        for (let i = 0; i < this.props.items.length; i++) {\r\n          this.options.push(this.props.items[i]);\r\n      }         \r\n    }\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={this.handleClickListItem}\r\n          >\r\n          {this.props.index < 0 \r\n            ? (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary=\"\"\r\n              />\r\n            ) \r\n            : (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary={this.options[this.props.index]}\r\n              />\r\n            )\r\n          }\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          open={this.state.open}\r\n          onClose={this.handleRequestClose}\r\n          transitionDuration={250}\r\n        >\r\n        {this.options.map((option, index) =>\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === this.props.index}\r\n            onClick={event => this.handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>,\r\n        )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Select);\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { PlayArrow, Pause, Clear, SkipNext } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SpeedSlider from './SpeedSlider';\r\nimport Generation from './Generation';\r\nimport ToggleIcon from './ToggleIcon';\r\nimport color from '../util/colors';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: color.BUTTON,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  vertical: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: 10\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 20\r\n    }\r\n  },\r\n  bar: {\r\n    margin: 5,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  slider: {\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n  },\r\n  generation: {\r\n    align: 'flex-end',\r\n    marginTop: 5,\r\n    marginRight: 15,\r\n    transform: 'skew(-10deg)',\r\n   }\r\n});\r\n\r\nconst PlayButtonsBar = ({classes, ...props}) => {\r\n  return (\r\n    <div className={classes.bar}>\r\n      <div className={classes.controls}>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title={props.on?\"Start\":\"Pause\"} onClick={() => props.handlePlayToggle()}>\r\n            <ToggleIcon\r\n              on={props.on}\r\n              onIcon={<PlayArrow className={classes.icon}/>}\r\n              offIcon={<Pause className={classes.icon} />}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Next Generation\" onClick={() => props.step()} >\r\n            <SkipNext className={classes.icon}/>\r\n          </IconButton>\r\n          </div>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Clear\" onClick={() => props.clear()} >\r\n            <Clear  className={classes.icon}/>\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.slider} title=\"Set Speed\">\r\n          <SpeedSlider onChange={(v) => props.setInterval(v)}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={classes.generation} title=\"Generation\">\r\n          <Generation />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(PlayButtonsBar);\r\n\r\nPlayButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handlePlayToggle: PropTypes.func.isRequired,\r\n  on: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  step: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  setInterval: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'rc-slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst handleStyle = {\r\n  position: 'absolute',\r\n  transform: 'translate(-35%, -35%)',\r\n  width: '15px',\r\n  height: '15px',\r\n  cursor: 'pointer',\r\n  borderRadius: '50%',\r\n  border: 'solid 3px',\r\n  borderColor: 'rgba(0, 0, 0, .7)',\r\n  backgroundColor: 'white',\r\n};\r\n\r\nclass Handle extends Component {\r\n  render() {\r\n    const style = Object.assign({ left: `${this.props.offset}%` }, handleStyle);\r\n    return(\r\n      <div style={style}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst sliderStyle = {    \r\n  width: 60,\r\n  height: 40,\r\n};\r\n\r\nconst handle = ({ fps, ...Props }) => {\r\n  return (\r\n    <Handle value={fps} style={{borderColor: 'black',}} {...Props} />\r\n  );\r\n};\r\n\r\nclass SpeedSlider extends Component {\r\n  componentWillMount() {\r\n      this.props.onChange(this.props.fps)\r\n  }\r\n  render() { \r\n    return (\r\n      <div style={sliderStyle}>\r\n        <Slider\r\n          min={2}\r\n          max={160}\r\n          step={2}\r\n          value={this.props.fps}\r\n          onChange={(v) => this.props.onChange(v)}\r\n          handle={handle}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps =({fps}) => ({fps});\r\n\r\nexport default (connect(mapStateToProps)(SpeedSlider));\r\n\r\nSpeedSlider.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport color from '../util/colors';\r\n\r\nconst Generation =({generation}) => {\r\n  return (\r\n    <div className=\"generation\">\r\n      {generation}\r\n    <style jsx global>{`\r\n      .generation {\r\n        color: ${color.GENERATION};\r\n        font-size: 1.5em;\r\n        text-align: right;\r\n      }\r\n    `}</style>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({generation}) => ({generation});\r\n\r\nexport default (connect(mapStateToProps)(Generation));\r\n\r\nGeneration.propTypes = {\r\n  generation: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport withRoot from '../withRoot';\r\nimport Layout from '../components/layout';\r\nimport Main from '../containers/Main';\r\n\r\nconst MainPage = ({ ...props }) => (\r\n  <Layout>\r\n    <Main {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default withRoot(MainPage);\r\n"],"sourceRoot":""}