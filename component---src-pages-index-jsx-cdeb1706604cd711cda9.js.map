{"version":3,"sources":["webpack:///./src/containers/Main.js","webpack:///./src/components/Main.jsx","webpack:///./src/components/SelectButtonsBar.js","webpack:///./src/components/Select.js","webpack:///./src/components/PlayButtonsBar.jsx","webpack:///./src/components/SpeedSlider.js","webpack:///./src/components/Generation.js","webpack:///./src/pages/index.jsx"],"names":["r","_reactRedux","__webpack_require__","_actions","_Main","__esModule","default","l","connect","_ref","running","currentSize","cells","currentPattern","dispatch","changePattern","index","changeBoardSize","size","incrementGeneration","setRunning","name","setSpeed","fps","setClear","saveCells","Main","_react","_propTypes","_interopRequireDefault","_styles","_gatsby","_reactLoaderSpinner","_Game","_SelectButtonsBar","_PlayButtonsBar","d","e","p","Object","assign","t","arguments","length","n","prototype","hasOwnProperty","call","apply","this","h","Symbol","iterator","constructor","m","Array","isArray","toString","from","TypeError","b","enumerable","configurable","writable","defineProperty","key","y","setPrototypeOf","getPrototypeOf","__proto__","g","v","ReferenceError","w","value","Component","props","_this","_getPrototypeOf","_defineProperty","_assertThisInitialized","game","handleWindowSizeChange","main","getCellCount","then","Date","now","rAF","requestAnimationFrame","run","boards","width","height","squareSize","label","params","patterns","boardWidth","boardHeight","Game","state","loading","window","addEventListener","setState","ratio","devicePixelRatio","drawBoard","canvas","removeEventListener","cancelAnimationFrame","liveCellsList","getLiveCells","interval","stop","drawCell","start","_this$props","data","_toConsumableArray","concat","console","log","setPattern","_this$props2","reload","clear","updateOnce","update","_this2","delta","_this3","_this$props3","classes","isRunning","createElement","className","container","menu","wrapper","patternIndex","parameters","onPatternChange","handlePatternChange","sizeIndex","onBoardSizeChange","handleBoardSizeChange","verticalMenu","direction","canvasControls","canvasReplacementWrapper","canvasReplacement","spinner","type","color","ref","onClick","handleClick","on","handlePlayToggle","step","setInterval","withStyles","textAlign","marginTop","zIndex","paddingLeft","paddingRight","display","@media (min-width: 1280px)","@media (orientation: landscape) and (max-width: 1280px)","padding","verticalAlign","paddingBottom","position","top","bottom","left","right","overflow","background","transform","StaticQuery","query","render","patternlist","allPattern","edges","map","item","node","_extends","_","propTypes","PropTypes","func","isRequired","shape","bool","arrayOf","number","defaultProps","5523","exports","pattern","5549","_Select","o","SelectButtonsBar","a","i","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","sizeItems","patternItems","style","items","onChange","s","theme","maxWidth","object","string","justify","patternNamesIndex","patternNames","array","changePatternEvent","patternLabel","gridSizesIndex","gridSizes","changeBoardSizeEventHandler","gridLabel","_List","_ListItem","_ListItemText","_Menu","_MenuItem","f","Select","anchorEl","open","event","currentTarget","options","push","root","button","handleClickListItem","primary","secondary","id","onClose","handleRequestClose","transitionDuration","option","selected","handleMenuItemClick","_icons","_IconButton","_SpeedSlider","_Generation","_ToggleIcon","_colors","PlayButtonsBar","bar","controls","title","onIcon","PlayArrow","icon","offIcon","Pause","SkipNext","Clear","slider","generation","_vertical","BUTTON","vertical","breakpoints","up","margin","justifyContent","marginLeft","align","marginRight","_rcSlider","u","c","create","handleStyle","cursor","borderRadius","border","borderColor","backgroundColor","Handle","offset","sliderStyle","handle","Props","SpeedSlider","min","max","_ref2","Generation","jsx","global","GENERATION","_withRoot","_layout"],"mappings":"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","file":"component---src-pages-index-jsx-cdeb1706604cd711cda9.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport {\r\n  changePattern, changeBoardSize, incrementGeneration, setRunning, setSpeed, setClear, saveCells,\r\n} from '../actions';\r\nimport Main from '../components/Main';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changePattern: (index) => {\r\n    dispatch(changePattern(index));\r\n  },\r\n  changeBoardSize: (size) => {\r\n    dispatch(changeBoardSize(size));\r\n  },\r\n  incrementGeneration: () => {\r\n    dispatch(incrementGeneration());\r\n  },\r\n  setRunning: (running, name) => {\r\n    dispatch(setRunning(running, name));\r\n  },\r\n  setSpeed: (fps) => {\r\n    dispatch(setSpeed(fps));\r\n  },\r\n  setClear: () => {\r\n    dispatch(setClear());\r\n  },\r\n  saveCells: (cells) => {\r\n    dispatch(saveCells(cells));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  running, currentSize, cells, currentPattern,\r\n}) => ({\r\n  running, currentSize, cells, currentPattern,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Loader from 'react-loader-spinner';\r\nimport Game from '../game/Game';\r\nimport SelectButtonsBar from './SelectButtonsBar';\r\nimport PlayButtonsBar from './PlayButtonsBar';\r\nimport color from '../util/colors';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '80px',\r\n    zIndex: 2,\r\n  },\r\n  wrapper: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  game: {\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    '@media (min-width: 1280px)': {\r\n      width: '50%',\r\n    },\r\n  },\r\n  menu: {\r\n    display: 'block',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  verticalMenu: {\r\n    display: 'none',\r\n    width: '25%',\r\n    padding: 2,\r\n    verticalAlign: 'top',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  canvasControls: {\r\n    display: 'block',\r\n    height: '100%',\r\n    width: '100%',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n      width: '70%',\r\n    },\r\n  },\r\n  canvasReplacementWrapper: {\r\n    paddingBottom: '56.25%',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  canvasReplacement: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: 'hidden',\r\n    background: '#eee',\r\n  },\r\n  spinner: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    display: 'inline-block',\r\n  },\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boards = [\r\n      {\r\n        name: 'small',\r\n        width: 30,\r\n        height: 20,\r\n        squareSize: 24,\r\n        label: '20 X 30',\r\n      },\r\n      {\r\n        name: 'medium',\r\n        width: 60,\r\n        height: 40,\r\n        squareSize: 12,\r\n        label: '40 X 60',\r\n      },\r\n      {\r\n        name: 'large',\r\n        width: 90,\r\n        height: 60,\r\n        squareSize: 8,\r\n        label: '60 X 90',\r\n      },\r\n    ];\r\n    const params = this.boards[props.currentSize];\r\n    this.patterns = [\r\n      {\r\n        name: 'random',\r\n        label: 'Random',\r\n      }\r\n    ];\r\n    this.boardWidth = params.width;\r\n    this.boardHeight = params.height;\r\n    this.squareSize = params.squareSize;\r\n    this.game = new Game(this.boardWidth, this.boardHeight, this.squareSize, props.cells);\r\n    this.setRunning = running => props.setRunning(running, 'main');\r\n    this.state = {\r\n      loading: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      window.addEventListener('resize', this.handleWindowSizeChange);\r\n      this.setState({ loading: false });\r\n      const ratio = window.devicePixelRatio || 1;\r\n      this.game.drawBoard(this.canvas, ratio);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    cancelAnimationFrame(this.rAF);\r\n    const liveCellsList = this.game.getLiveCells();\r\n    const { saveCells } = this.props;\r\n    saveCells(liveCellsList);\r\n  }\r\n\r\n  setInterval(value) {\r\n    const { setSpeed } = this.props;\r\n    this.interval = 1000 / value;\r\n    setSpeed(value);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.game.handleWindowSizeChange();\r\n  };\r\n\r\n\r\n  start = () => {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.then = Date.now();\r\n      this.setRunning(true);\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    }\r\n    this.game.drawCell(e);\r\n  }\r\n\r\n  handlePlayToggle() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n\r\n  handlePatternChange(index) {\r\n    const { currentPattern, data, changePattern } = this.props;\r\n    if (index !== currentPattern) {\r\n      this.stop();\r\n      const patterns = [...this.patterns, ...data];\r\n      console.log(patterns)\r\n      this.game.setPattern(index, patterns);\r\n      changePattern(index);\r\n    }\r\n  }\r\n\r\n  handleBoardSizeChange(index) {\r\n    const { currentSize, changeBoardSize } = this.props;\r\n    if (index !== currentSize) {\r\n      this.stop();\r\n      const params = this.boards[index];\r\n      this.boardWidth = params.width;\r\n      this.boardHeight = params.height;\r\n      this.squareSize = params.squareSize;\r\n      this.game.reload(this.boardWidth, this.boardHeight, this.squareSize, this.canvas);\r\n      changeBoardSize(index);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.setRunning(false);\r\n      cancelAnimationFrame(this.rAF);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!(this.game.getCellCount() === 0)) {\r\n      const { setClear } = this.props;\r\n      this.stop();\r\n      setClear();\r\n      this.game.clear();\r\n    }\r\n  }\r\n\r\n  step() {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.updateOnce();\r\n    }\r\n  }\r\n\r\n  updateOnce() {\r\n    const { incrementGeneration } = this.props;\r\n    this.game.update();\r\n    incrementGeneration();\r\n  }\r\n\r\n  run() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.then;\r\n    if (this.delta > this.interval) {\r\n      this.then = this.now - (this.delta % this.interval);\r\n      this.updateOnce();\r\n    }\r\n    this.rAF = requestAnimationFrame(() => {\r\n      this.run();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes, running, currentPattern, data, currentSize,\r\n    } = this.props;\r\n    const { loading } = this.state;\r\n    const patterns = [...this.patterns, ...data];\r\n    const params = this.boards[currentSize];\r\n    const boardWidth = ((params.width + 1) * params.squareSize);\r\n    const boardHeight = ((params.height + 1) * params.squareSize);\r\n    const canvasStyle = { width: boardWidth, height: boardHeight };\r\n    const isRunning = running.main || false;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.game}>\r\n          <div className={classes.menu}>\r\n            <div className={classes.wrapper}>\r\n              <SelectButtonsBar\r\n                patternIndex={currentPattern}\r\n                patterns={patterns}\r\n                parameters={this.boards}\r\n                onPatternChange={index => this.handlePatternChange(index)}\r\n                sizeIndex={currentSize}\r\n                onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.verticalMenu}>\r\n            <SelectButtonsBar\r\n              patternIndex={currentPattern}\r\n              patterns={patterns}\r\n              parameters={this.boards}\r\n              onPatternChange={index => this.handlePatternChange(index)}\r\n              sizeIndex={currentSize}\r\n              onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              direction=\"column\"\r\n            />\r\n          </div>\r\n          <div className={classes.canvasControls}>\r\n            <div className={classes.wrapper}>\r\n              {loading\r\n                && (\r\n                  <div\r\n                    className={classes.canvasReplacementWrapper}\r\n                  >\r\n                    <div className={classes.canvasReplacement}>\r\n                      <div className={classes.spinner}>\r\n                      <Loader\r\n                        type=\"Grid\"\r\n                        color=\"#aaa\"\r\n                        height=\"50\" \r\n                        width=\"50\"\r\n                      /> \r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <canvas\r\n                ref={(canvas) => { this.canvas = canvas; }}\r\n                onClick={e => this.handleClick(e)}\r\n              />\r\n            </div>\r\n            <div className=\"controls\">\r\n              <PlayButtonsBar\r\n                on={!isRunning}\r\n                handlePlayToggle={() => this.handlePlayToggle()}\r\n                step={() => this.step()}\r\n                clear={() => this.clear()}\r\n                setInterval={v => this.setInterval(v)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = Component => props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPattern {\r\n          edges {\r\n            node {\r\n              name,\r\n              pattern,\r\n              label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const patternlist = data.allPattern.edges.map(item => item.node);\r\n      return (\r\n        <Component data={patternlist} {...props} />\r\n      );\r\n    }}\r\n  />\r\n)\r\n\r\nexport default withData(withStyles(styles)(Main));\r\n\r\n// const TWO_NUMBERS_ARRAY = function(props, propName, componentName) {\r\n//   if (!Array.isArray(props.propName) || props.propName.length != 2 || !props.propName.every(Number.isInteger)) {\r\n//     return new Error(`${propName} needs to be an array of two numbers`);\r\n//   }    \r\n// }\r\n\r\n\r\nMain.propTypes = {\r\n  setRunning: PropTypes.func.isRequired,\r\n  running: PropTypes.shape({\r\n    main: PropTypes.bool,\r\n  }),\r\n  classes: PropTypes.shape({}),\r\n  cells: PropTypes.func.isRequired,\r\n  patterns: PropTypes.arrayOf(PropTypes.shape({})),\r\n  changePattern: PropTypes.func.isRequired,\r\n  changeBoardSize: PropTypes.func.isRequired,\r\n  incrementGeneration: PropTypes.func.isRequired,\r\n  setSpeed: PropTypes.func.isRequired,\r\n  setClear: PropTypes.func.isRequired,\r\n  saveCells: PropTypes.func.isRequired,\r\n  currentPattern: PropTypes.number,\r\n  currentSize: PropTypes.number,\r\n};\r\n\r\nMain.defaultProps = {\r\n  classes: {},\r\n  running: {\r\n    main: false,\r\n  },\r\n  currentPattern: 0,\r\n  currentSize: 1,\r\n  patterns: [\r\n    {\r\n      name: 'random',\r\n      label: 'Random',\r\n    }\r\n  ],\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from './Select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  item: {\r\n    width:'50%',\r\n    display: 'inline-block',\r\n    maxWidth: 360,\r\n  },\r\n})\r\n\r\nconst SelectButtonsBar = ({direction, ...props}) => {\r\n  const sizeItems = props.parameters.map(size => size.label);\r\n  const patternItems = props.patterns.map(pattern => pattern.label);\r\n  const width = direction == 'column' ? '100%' : null;\r\n  return (\r\n    <div className={props.classes.container} >\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.patternIndex}\r\n          items={patternItems}\r\n          onChange={(index) => props.onPatternChange(index)}\r\n          label=\"Pattern\"\r\n        />\r\n      </div>\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.sizeIndex}\r\n          items={sizeItems}\r\n          onChange={(index) => props.onBoardSizeChange(index)}\r\n          label=\"Board Size\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SelectButtonsBar);\r\n\r\nSelectButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  direction: PropTypes.string,\r\n  justify: PropTypes.string,\r\n  patternNamesIndex: PropTypes.number.isRequired,\r\n  patternNames: PropTypes.array.isRequired,\r\n  changePatternEvent: PropTypes.func.isRequired,\r\n  patternLabel: PropTypes.string.isRequired,\r\n  gridSizesIndex: PropTypes.number.isRequired,\r\n  gridSizes: PropTypes.array.isRequired,\r\n  changeBoardSizeEventHandler: PropTypes.func.isRequired,\r\n  gridLabel: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  },\r\n};\r\n\r\nclass Select extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.options = [];\r\n    if(typeof props.items !== 'undefined'){\r\n      for(let i=0;i<props.items.length;i++){\r\n        this.options.push(props.items[i]);\r\n      }         \r\n    }\r\n  }\r\n\r\n  state = {\r\n    anchorEl: undefined,\r\n    open: false,\r\n  };\r\n\r\n  button = undefined;\r\n\r\n  handleClickListItem = event => {\r\n    this.setState({ open: true, anchorEl: event.currentTarget, });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index) => {\r\n    this.setState({open: false});\r\n    this.props.onChange(index);\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    this.options.length = 0;\r\n    if (typeof this.props.items !== 'undefined') {\r\n        for (let i = 0; i < this.props.items.length; i++) {\r\n          this.options.push(this.props.items[i]);\r\n      }         \r\n    }\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={this.handleClickListItem}\r\n          >\r\n          {this.props.index < 0 \r\n            ? (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary=\"\"\r\n              />\r\n            ) \r\n            : (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary={this.options[this.props.index]}\r\n              />\r\n            )\r\n          }\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          open={this.state.open}\r\n          onClose={this.handleRequestClose}\r\n          transitionDuration={250}\r\n        >\r\n        {this.options.map((option, index) =>\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === this.props.index}\r\n            onClick={event => this.handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>,\r\n        )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Select);\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { PlayArrow, Pause, Clear, SkipNext } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SpeedSlider from './SpeedSlider';\r\nimport Generation from './Generation';\r\nimport ToggleIcon from './ToggleIcon';\r\nimport color from '../util/colors';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: color.BUTTON,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  vertical: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: 10\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 20\r\n    }\r\n  },\r\n  bar: {\r\n    margin: 5,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  slider: {\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n  },\r\n  generation: {\r\n    align: 'flex-end',\r\n    marginTop: 5,\r\n    marginRight: 15,\r\n    transform: 'skew(-10deg)',\r\n   }\r\n});\r\n\r\nconst PlayButtonsBar = ({classes, ...props}) => {\r\n  return (\r\n    <div className={classes.bar}>\r\n      <div className={classes.controls}>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title={props.on?\"Start\":\"Pause\"} onClick={() => props.handlePlayToggle()}>\r\n            <ToggleIcon\r\n              on={props.on}\r\n              onIcon={<PlayArrow className={classes.icon}/>}\r\n              offIcon={<Pause className={classes.icon} />}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Next Generation\" onClick={() => props.step()} >\r\n            <SkipNext className={classes.icon}/>\r\n          </IconButton>\r\n          </div>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Clear\" onClick={() => props.clear()} >\r\n            <Clear  className={classes.icon}/>\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.slider} title=\"Set Speed\">\r\n          <SpeedSlider onChange={(v) => props.setInterval(v)}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={classes.generation} title=\"Generation\">\r\n          <Generation />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(PlayButtonsBar);\r\n\r\nPlayButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handlePlayToggle: PropTypes.func.isRequired,\r\n  on: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  step: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  setInterval: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'rc-slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst handleStyle = {\r\n  position: 'absolute',\r\n  transform: 'translate(-35%, -35%)',\r\n  width: '15px',\r\n  height: '15px',\r\n  cursor: 'pointer',\r\n  borderRadius: '50%',\r\n  border: 'solid 3px',\r\n  borderColor: 'rgba(0, 0, 0, .7)',\r\n  backgroundColor: 'white',\r\n};\r\n\r\nclass Handle extends Component {\r\n  render() {\r\n    const style = Object.assign({ left: `${this.props.offset}%` }, handleStyle);\r\n    return(\r\n      <div style={style}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst sliderStyle = {    \r\n  width: 60,\r\n  height: 40,\r\n};\r\n\r\nconst handle = ({ fps, ...Props }) => {\r\n  return (\r\n    <Handle value={fps} style={{borderColor: 'black',}} {...Props} />\r\n  );\r\n};\r\n\r\nclass SpeedSlider extends Component {\r\n  componentWillMount() {\r\n      this.props.onChange(this.props.fps)\r\n  }\r\n  render() { \r\n    return (\r\n      <div style={sliderStyle}>\r\n        <Slider\r\n          min={2}\r\n          max={160}\r\n          step={2}\r\n          value={this.props.fps}\r\n          onChange={(v) => this.props.onChange(v)}\r\n          handle={handle}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps =({fps}) => ({fps});\r\n\r\nexport default (connect(mapStateToProps)(SpeedSlider));\r\n\r\nSpeedSlider.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport color from '../util/colors';\r\n\r\nconst Generation =({generation}) => {\r\n  return (\r\n    <div className=\"generation\">\r\n      {generation}\r\n    <style jsx global>{`\r\n      .generation {\r\n        color: ${color.GENERATION};\r\n        font-size: 1.5em;\r\n        text-align: right;\r\n      }\r\n    `}</style>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({generation}) => ({generation});\r\n\r\nexport default (connect(mapStateToProps)(Generation));\r\n\r\nGeneration.propTypes = {\r\n  generation: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport withRoot from '../withRoot';\r\nimport Layout from '../components/layout';\r\nimport Main from '../containers/Main';\r\n\r\nconst MainPage = ({ ...props }) => (\r\n  <Layout>\r\n    <Main {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default withRoot(MainPage);\r\n"],"sourceRoot":""}