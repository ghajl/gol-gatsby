{"version":3,"sources":["webpack:///./src/containers/Main.js","webpack:///./src/components/Main.jsx","webpack:///./src/components/SelectButtonsBar.js","webpack:///./src/components/Select.js","webpack:///./src/components/PlayButtonsBar.jsx","webpack:///./src/components/SpeedSlider.js","webpack:///./src/components/Generation.js","webpack:///./src/pages/index.jsx"],"names":["r","_reactRedux","__webpack_require__","_actions","_Main","__esModule","default","l","connect","_ref","running","currentSize","cells","currentPattern","dispatch","changePattern","index","changeBoardSize","size","incrementGeneration","setRunning","name","setSpeed","fps","setClear","saveCells","Main","_react","_propTypes","_interopRequireDefault","_styles","_gatsby","_Game","_SelectButtonsBar","_PlayButtonsBar","f","e","d","Object","assign","t","arguments","length","n","prototype","hasOwnProperty","call","apply","this","p","Symbol","iterator","constructor","h","Array","isArray","toString","from","TypeError","m","enumerable","configurable","writable","defineProperty","key","b","setPrototypeOf","getPrototypeOf","__proto__","y","g","ReferenceError","v","value","Component","props","_this","_getPrototypeOf","_defineProperty","_assertThisInitialized","game","handleWindowSizeChange","main","getCellCount","then","Date","now","rAF","requestAnimationFrame","run","boards","width","height","squareSize","label","params","patterns","boardWidth","boardHeight","Game","window","addEventListener","ratio","devicePixelRatio","drawBoard","canvas","removeEventListener","cancelAnimationFrame","liveCellsList","getLiveCells","interval","stop","drawCell","start","_this$props","data","_toConsumableArray","concat","console","log","setPattern","_this$props2","reload","clear","updateOnce","update","_this2","delta","_this3","_this$props3","classes","isRunning","createElement","className","container","menu","wrapper","patternIndex","parameters","onPatternChange","handlePatternChange","sizeIndex","onBoardSizeChange","handleBoardSizeChange","verticalMenu","direction","canvasControls","canvasReplacementWrapper","ref","el","style","display","canvasReplacement","onClick","handleClick","on","handlePlayToggle","step","setInterval","withStyles","textAlign","marginTop","zIndex","paddingLeft","paddingRight","@media (min-width: 1280px)","@media (orientation: landscape) and (max-width: 1280px)","padding","verticalAlign","paddingBottom","position","top","bottom","left","right","overflow","background","StaticQuery","query","render","patternlist","allPattern","edges","map","item","node","_extends","_","propTypes","PropTypes","func","isRequired","shape","bool","arrayOf","number","defaultProps","5523","exports","pattern","5524","_Select","o","SelectButtonsBar","a","i","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","sizeItems","patternItems","items","onChange","s","theme","maxWidth","object","string","justify","patternNamesIndex","patternNames","array","changePatternEvent","patternLabel","gridSizesIndex","gridSizes","changeBoardSizeEventHandler","gridLabel","_List","_ListItem","_ListItemText","_Menu","_MenuItem","Select","anchorEl","open","event","setState","currentTarget","options","push","root","button","handleClickListItem","primary","secondary","id","state","onClose","handleRequestClose","transitionDuration","option","selected","handleMenuItemClick","_icons","_IconButton","_SpeedSlider","_Generation","_ToggleIcon","_colors","PlayButtonsBar","bar","controls","title","onIcon","PlayArrow","icon","offIcon","Pause","SkipNext","Clear","slider","generation","_vertical","color","BUTTON","vertical","breakpoints","up","margin","justifyContent","marginLeft","align","marginRight","transform","_rcSlider","u","c","create","handleStyle","cursor","borderRadius","border","borderColor","backgroundColor","Handle","offset","sliderStyle","handle","Props","SpeedSlider","min","max","_ref2","Generation","jsx","global","GENERATION","_withRoot","_layout"],"mappings":"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","file":"component---src-pages-index-jsx-e975a4a4483f2d36d003.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport {\r\n  changePattern, changeBoardSize, incrementGeneration, setRunning, setSpeed, setClear, saveCells,\r\n} from '../actions';\r\nimport Main from '../components/Main';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changePattern: (index) => {\r\n    dispatch(changePattern(index));\r\n  },\r\n  changeBoardSize: (size) => {\r\n    dispatch(changeBoardSize(size));\r\n  },\r\n  incrementGeneration: () => {\r\n    dispatch(incrementGeneration());\r\n  },\r\n  setRunning: (running, name) => {\r\n    dispatch(setRunning(running, name));\r\n  },\r\n  setSpeed: (fps) => {\r\n    dispatch(setSpeed(fps));\r\n  },\r\n  setClear: () => {\r\n    dispatch(setClear());\r\n  },\r\n  saveCells: (cells) => {\r\n    dispatch(saveCells(cells));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  running, currentSize, cells, currentPattern,\r\n}) => ({\r\n  running, currentSize, cells, currentPattern,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport Game from '../game/Game';\r\nimport SelectButtonsBar from './SelectButtonsBar';\r\nimport PlayButtonsBar from './PlayButtonsBar';\r\nimport color from '../util/colors';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '80px',\r\n    zIndex: 2,\r\n  },\r\n  wrapper: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  game: {\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    '@media (min-width: 1280px)': {\r\n      width: '50%',\r\n    },\r\n  },\r\n  menu: {\r\n    display: 'block',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  verticalMenu: {\r\n    display: 'none',\r\n    width: '25%',\r\n    padding: 2,\r\n    verticalAlign: 'top',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  canvasControls: {\r\n    display: 'block',\r\n    height: '100%',\r\n    width: '100%',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n      width: '70%',\r\n    },\r\n  },\r\n  canvasReplacementWrapper: {\r\n    paddingBottom: '56.25%',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  canvasReplacement: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: 'hidden',\r\n    background: 'gray',\r\n  }\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boards = [\r\n      {\r\n        name: 'small',\r\n        width: 30,\r\n        height: 20,\r\n        squareSize: 24,\r\n        label: '20 X 30',\r\n      },\r\n      {\r\n        name: 'medium',\r\n        width: 60,\r\n        height: 40,\r\n        squareSize: 12,\r\n        label: '40 X 60',\r\n      },\r\n      {\r\n        name: 'large',\r\n        width: 90,\r\n        height: 60,\r\n        squareSize: 8,\r\n        label: '60 X 90',\r\n      },\r\n    ];\r\n    const params = this.boards[props.currentSize];\r\n    this.patterns = [\r\n      {\r\n        name: 'random',\r\n        label: 'Random',\r\n      }\r\n    ];\r\n    this.boardWidth = params.width;\r\n    this.boardHeight = params.height;\r\n    this.squareSize = params.squareSize;\r\n    this.game = new Game(this.boardWidth, this.boardHeight, this.squareSize, props.cells);\r\n    this.setRunning = running => props.setRunning(running, 'main');\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      window.addEventListener('resize', this.handleWindowSizeChange);\r\n      const ratio = window.devicePixelRatio || 1;\r\n      this.game.drawBoard(this.canvas, ratio);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    cancelAnimationFrame(this.rAF);\r\n    const liveCellsList = this.game.getLiveCells();\r\n    const { saveCells } = this.props;\r\n    saveCells(liveCellsList);\r\n  }\r\n\r\n  setInterval(value) {\r\n    const { setSpeed } = this.props;\r\n    this.interval = 1000 / value;\r\n    setSpeed(value);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.game.handleWindowSizeChange();\r\n  };\r\n\r\n\r\n  start = () => {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.then = Date.now();\r\n      this.setRunning(true);\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    }\r\n    this.game.drawCell(e);\r\n  }\r\n\r\n  handlePlayToggle() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n\r\n  handlePatternChange(index) {\r\n    const { currentPattern, data, changePattern } = this.props;\r\n    if (index !== currentPattern) {\r\n      this.stop();\r\n      const patterns = [...this.patterns, ...data];\r\n      console.log(patterns)\r\n      this.game.setPattern(index, patterns);\r\n      changePattern(index);\r\n    }\r\n  }\r\n\r\n  handleBoardSizeChange(index) {\r\n    const { currentSize, changeBoardSize } = this.props;\r\n    if (index !== currentSize) {\r\n      this.stop();\r\n      const params = this.boards[index];\r\n      this.boardWidth = params.width;\r\n      this.boardHeight = params.height;\r\n      this.squareSize = params.squareSize;\r\n      this.game.reload(this.boardWidth, this.boardHeight, this.squareSize, this.canvas);\r\n      changeBoardSize(index);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.setRunning(false);\r\n      cancelAnimationFrame(this.rAF);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!(this.game.getCellCount() === 0)) {\r\n      const { setClear } = this.props;\r\n      this.stop();\r\n      setClear();\r\n      this.game.clear();\r\n    }\r\n  }\r\n\r\n  step() {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.updateOnce();\r\n    }\r\n  }\r\n\r\n  updateOnce() {\r\n    const { incrementGeneration } = this.props;\r\n    this.game.update();\r\n    incrementGeneration();\r\n  }\r\n\r\n  run() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.then;\r\n    if (this.delta > this.interval) {\r\n      this.then = this.now - (this.delta % this.interval);\r\n      this.updateOnce();\r\n    }\r\n    this.rAF = requestAnimationFrame(() => {\r\n      this.run();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes, running, currentPattern, data, currentSize,\r\n    } = this.props;\r\n    const patterns = [...this.patterns, ...data];\r\n    const params = this.boards[currentSize];\r\n    const boardWidth = ((params.width + 1) * params.squareSize);\r\n    const boardHeight = ((params.height + 1) * params.squareSize);\r\n    const canvasStyle = { width: boardWidth, height: boardHeight };\r\n    const isRunning = running.main || false;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.game}>\r\n          <div className={classes.menu}>\r\n            <div className={classes.wrapper}>\r\n              <SelectButtonsBar\r\n                patternIndex={currentPattern}\r\n                patterns={patterns}\r\n                parameters={this.boards}\r\n                onPatternChange={index => this.handlePatternChange(index)}\r\n                sizeIndex={currentSize}\r\n                onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.verticalMenu}>\r\n            <SelectButtonsBar\r\n              patternIndex={currentPattern}\r\n              patterns={patterns}\r\n              parameters={this.boards}\r\n              onPatternChange={index => this.handlePatternChange(index)}\r\n              sizeIndex={currentSize}\r\n              onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              direction=\"column\"\r\n            />\r\n          </div>\r\n          <div className={classes.canvasControls}>\r\n            <div className={classes.wrapper}>\r\n              <div\r\n                className={classes.canvasReplacementWrapper}\r\n                ref={(el) => {el.style.display='none'}}\r\n              >\r\n                <div className={classes.canvasReplacement} />\r\n              </div>\r\n              <canvas\r\n                ref={(canvas) => { this.canvas = canvas; }}\r\n                onClick={e => this.handleClick(e)}\r\n              />\r\n            </div>\r\n            <div className=\"controls\">\r\n              <PlayButtonsBar\r\n                on={!isRunning}\r\n                handlePlayToggle={() => this.handlePlayToggle()}\r\n                step={() => this.step()}\r\n                clear={() => this.clear()}\r\n                setInterval={v => this.setInterval(v)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = Component => props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPattern {\r\n          edges {\r\n            node {\r\n              name,\r\n              pattern,\r\n              label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => {\r\n      const patternlist = data.allPattern.edges.map(item => item.node);\r\n      return (\r\n        <Component data={patternlist} {...props} />\r\n      );\r\n    }}\r\n  />\r\n)\r\n\r\nexport default withData(withStyles(styles)(Main));\r\n\r\n// const TWO_NUMBERS_ARRAY = function(props, propName, componentName) {\r\n//   if (!Array.isArray(props.propName) || props.propName.length != 2 || !props.propName.every(Number.isInteger)) {\r\n//     return new Error(`${propName} needs to be an array of two numbers`);\r\n//   }    \r\n// }\r\n\r\n\r\nMain.propTypes = {\r\n  setRunning: PropTypes.func.isRequired,\r\n  running: PropTypes.shape({\r\n    main: PropTypes.bool,\r\n  }),\r\n  classes: PropTypes.shape({}),\r\n  cells: PropTypes.func.isRequired,\r\n  patterns: PropTypes.arrayOf(PropTypes.shape({})),\r\n  changePattern: PropTypes.func.isRequired,\r\n  changeBoardSize: PropTypes.func.isRequired,\r\n  incrementGeneration: PropTypes.func.isRequired,\r\n  setSpeed: PropTypes.func.isRequired,\r\n  setClear: PropTypes.func.isRequired,\r\n  saveCells: PropTypes.func.isRequired,\r\n  currentPattern: PropTypes.number,\r\n  currentSize: PropTypes.number,\r\n};\r\n\r\nMain.defaultProps = {\r\n  classes: {},\r\n  running: {\r\n    main: false,\r\n  },\r\n  currentPattern: 0,\r\n  currentSize: 1,\r\n  patterns: [\r\n    {\r\n      name: 'random',\r\n      label: 'Random',\r\n    }\r\n  ],\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from './Select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  item: {\r\n    width:'50%',\r\n    display: 'inline-block',\r\n    maxWidth: 360,\r\n  },\r\n})\r\n\r\nconst SelectButtonsBar = ({direction, ...props}) => {\r\n  const sizeItems = props.parameters.map(size => size.label);\r\n  const patternItems = props.patterns.map(pattern => pattern.label);\r\n  const width = direction == 'column' ? '100%' : null;\r\n  return (\r\n    <div className={props.classes.container} >\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.patternIndex}\r\n          items={patternItems}\r\n          onChange={(index) => props.onPatternChange(index)}\r\n          label=\"Pattern\"\r\n        />\r\n      </div>\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.sizeIndex}\r\n          items={sizeItems}\r\n          onChange={(index) => props.onBoardSizeChange(index)}\r\n          label=\"Board Size\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SelectButtonsBar);\r\n\r\nSelectButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  direction: PropTypes.string,\r\n  justify: PropTypes.string,\r\n  patternNamesIndex: PropTypes.number.isRequired,\r\n  patternNames: PropTypes.array.isRequired,\r\n  changePatternEvent: PropTypes.func.isRequired,\r\n  patternLabel: PropTypes.string.isRequired,\r\n  gridSizesIndex: PropTypes.number.isRequired,\r\n  gridSizes: PropTypes.array.isRequired,\r\n  changeBoardSizeEventHandler: PropTypes.func.isRequired,\r\n  gridLabel: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  },\r\n};\r\n\r\nclass Select extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.options = [];\r\n    if(typeof props.items !== 'undefined'){\r\n      for(let i=0;i<props.items.length;i++){\r\n        this.options.push(props.items[i]);\r\n      }         \r\n    }\r\n  }\r\n\r\n  state = {\r\n    anchorEl: undefined,\r\n    open: false,\r\n  };\r\n\r\n  button = undefined;\r\n\r\n  handleClickListItem = event => {\r\n    this.setState({ open: true, anchorEl: event.currentTarget, });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index) => {\r\n    this.setState({open: false});\r\n    this.props.onChange(index);\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    this.options.length = 0;\r\n    if (typeof this.props.items !== 'undefined') {\r\n        for (let i = 0; i < this.props.items.length; i++) {\r\n          this.options.push(this.props.items[i]);\r\n      }         \r\n    }\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={this.handleClickListItem}\r\n          >\r\n          {this.props.index < 0 \r\n            ? (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary=\"\"\r\n              />\r\n            ) \r\n            : (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary={this.options[this.props.index]}\r\n              />\r\n            )\r\n          }\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          open={this.state.open}\r\n          onClose={this.handleRequestClose}\r\n          transitionDuration={250}\r\n        >\r\n        {this.options.map((option, index) =>\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === this.props.index}\r\n            onClick={event => this.handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>,\r\n        )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Select);\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { PlayArrow, Pause, Clear, SkipNext } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SpeedSlider from './SpeedSlider';\r\nimport Generation from './Generation';\r\nimport ToggleIcon from './ToggleIcon';\r\nimport color from '../util/colors';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: color.BUTTON,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  vertical: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: 10\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 20\r\n    }\r\n  },\r\n  bar: {\r\n    margin: 5,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  slider: {\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n  },\r\n  generation: {\r\n    align: 'flex-end',\r\n    marginTop: 5,\r\n    marginRight: 15,\r\n    transform: 'skew(-10deg)',\r\n   }\r\n});\r\n\r\nconst PlayButtonsBar = ({classes, ...props}) => {\r\n  return (\r\n    <div className={classes.bar}>\r\n      <div className={classes.controls}>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title={props.on?\"Start\":\"Pause\"} onClick={() => props.handlePlayToggle()}>\r\n            <ToggleIcon\r\n              on={props.on}\r\n              onIcon={<PlayArrow className={classes.icon}/>}\r\n              offIcon={<Pause className={classes.icon} />}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Next Generation\" onClick={() => props.step()} >\r\n            <SkipNext className={classes.icon}/>\r\n          </IconButton>\r\n          </div>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Clear\" onClick={() => props.clear()} >\r\n            <Clear  className={classes.icon}/>\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.slider} title=\"Set Speed\">\r\n          <SpeedSlider onChange={(v) => props.setInterval(v)}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={classes.generation} title=\"Generation\">\r\n          <Generation />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(PlayButtonsBar);\r\n\r\nPlayButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handlePlayToggle: PropTypes.func.isRequired,\r\n  on: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  step: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  setInterval: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'rc-slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst handleStyle = {\r\n  position: 'absolute',\r\n  transform: 'translate(-35%, -35%)',\r\n  width: '15px',\r\n  height: '15px',\r\n  cursor: 'pointer',\r\n  borderRadius: '50%',\r\n  border: 'solid 3px',\r\n  borderColor: 'rgba(0, 0, 0, .7)',\r\n  backgroundColor: 'white',\r\n};\r\n\r\nclass Handle extends Component {\r\n  render() {\r\n    const style = Object.assign({ left: `${this.props.offset}%` }, handleStyle);\r\n    return(\r\n      <div style={style}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst sliderStyle = {    \r\n  width: 60,\r\n  height: 40,\r\n};\r\n\r\nconst handle = ({ fps, ...Props }) => {\r\n  return (\r\n    <Handle value={fps} style={{borderColor: 'black',}} {...Props} />\r\n  );\r\n};\r\n\r\nclass SpeedSlider extends Component {\r\n  componentWillMount() {\r\n      this.props.onChange(this.props.fps)\r\n  }\r\n  render() { \r\n    return (\r\n      <div style={sliderStyle}>\r\n        <Slider\r\n          min={2}\r\n          max={160}\r\n          step={2}\r\n          value={this.props.fps}\r\n          onChange={(v) => this.props.onChange(v)}\r\n          handle={handle}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps =({fps}) => ({fps});\r\n\r\nexport default (connect(mapStateToProps)(SpeedSlider));\r\n\r\nSpeedSlider.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport color from '../util/colors';\r\n\r\nconst Generation =({generation}) => {\r\n  return (\r\n    <div className=\"generation\">\r\n      {generation}\r\n    <style jsx global>{`\r\n      .generation {\r\n        color: ${color.GENERATION};\r\n        font-size: 1.5em;\r\n        text-align: right;\r\n      }\r\n    `}</style>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({generation}) => ({generation});\r\n\r\nexport default (connect(mapStateToProps)(Generation));\r\n\r\nGeneration.propTypes = {\r\n  generation: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport withRoot from '../withRoot';\r\nimport Layout from '../components/layout';\r\nimport Main from '../containers/Main';\r\n\r\nconst MainPage = ({ ...props }) => (\r\n  <Layout>\r\n    <Main {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default withRoot(MainPage);\r\n"],"sourceRoot":""}