{"version":3,"sources":["webpack:///./src/containers/Main.js","webpack:///./src/components/Main.jsx","webpack:///./src/components/SelectButtonsBar.jsx","webpack:///./src/components/Select.jsx","webpack:///./src/components/PlayButtonsBar.jsx","webpack:///./src/containers/SpeedSlider.jsx","webpack:///./src/containers/Generation.jsx","webpack:///./src/pages/index.jsx"],"names":["r","_reactRedux","__webpack_require__","_actions","_Main","__esModule","default","l","connect","_ref","running","currentSize","cells","currentPattern","dispatch","changePattern","index","changeBoardSize","size","incrementGeneration","setRunning","name","setSpeed","fps","setClear","saveCells","Main","_react","_propTypes","_interopRequireDefault","_styles","_gatsby","_CircularProgress","_Game","_SelectButtonsBar","_PlayButtonsBar","f","e","p","Object","assign","t","arguments","length","n","prototype","hasOwnProperty","call","apply","this","h","Symbol","iterator","constructor","m","Array","isArray","toString","from","TypeError","y","enumerable","configurable","writable","defineProperty","key","b","setPrototypeOf","getPrototypeOf","__proto__","g","v","ReferenceError","w","value","WrappedComponent","props","_this","_getPrototypeOf","_defineProperty","_assertThisInitialized","game","handleWindowSizeChange","main","getCellCount","then","Date","now","rAF","requestAnimationFrame","run","boards","width","height","squareSize","label","params","patterns","boardWidth","boardHeight","Game","state","loading","Component","window","addEventListener","setState","ratio","devicePixelRatio","drawBoard","canvas","removeEventListener","cancelAnimationFrame","liveCellsList","getLiveCells","interval","stop","drawCell","start","_this$props","data","_toConsumableArray","concat","setPattern","_this$props2","reload","clear","updateOnce","cellCount","update","_this2","delta","_this3","_this$props3","classes","isRunning","createElement","className","container","menu","wrapper","patternIndex","parameters","onPatternChange","handlePatternChange","sizeIndex","onBoardSizeChange","handleBoardSizeChange","verticalMenu","direction","canvasControls","canvasReplacementWrapper","canvasReplacement","progressWrapper","thickness","ref","onClick","handleClick","on","handlePlayToggle","step","setInterval","withStyles","textAlign","marginTop","zIndex","paddingLeft","paddingRight","display","@media (min-width: 1280px)","@media (orientation: landscape) and (max-width: 1280px)","padding","verticalAlign","paddingBottom","position","top","bottom","left","right","overflow","background","transform","animation","StaticQuery","query","render","patternlist","allPattern","edges","map","item","node","_extends","_","propTypes","PropTypes","func","isRequired","shape","bool","arrayOf","number","defaultProps","5526","exports","pattern","5527","_Select","SelectButtonsBar","sizeItems","patternItems","style","items","onChange","s","maxWidth","string","5528","_List","_ListItem","_ListItemText","_Menu","_MenuItem","d","Select","event","open","anchorEl","currentTarget","options","button","_this$state","root","handleClickListItem","primary","secondary","id","onClose","handleRequestClose","transitionDuration","option","i","selected","handleMenuItemClick","_icons","_IconButton","_SpeedSlider","_Generation","_ToggleIcon","_colors","PlayButtonsBar","bar","controls","title","onIcon","PlayArrow","icon","offIcon","Pause","SkipNext","Clear","slider","generation","theme","_vertical","color","BUTTON","vertical","breakpoints","up","margin","justifyContent","marginLeft","align","marginRight","_rcSlider","u","Handle","offset","handleStyle","cursor","borderRadius","border","borderColor","backgroundColor","sliderStyle","handle","_ref2","a","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","SpeedSlider","min","max","_ref3","styles","GENERATION","fontSize","Generation","_withRoot","_layout"],"mappings":"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","file":"component---src-pages-index-jsx-6c2cdb2f3cc7b807d808.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport {\r\n  changePattern, changeBoardSize, incrementGeneration, setRunning, setSpeed, setClear, saveCells,\r\n} from '../actions';\r\nimport Main from '../components/Main';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changePattern: (index) => {\r\n    dispatch(changePattern(index));\r\n  },\r\n  changeBoardSize: (size) => {\r\n    dispatch(changeBoardSize(size));\r\n  },\r\n  incrementGeneration: () => {\r\n    dispatch(incrementGeneration());\r\n  },\r\n  setRunning: (running, name) => {\r\n    dispatch(setRunning(running, name));\r\n  },\r\n  setSpeed: (fps) => {\r\n    dispatch(setSpeed(fps));\r\n  },\r\n  setClear: () => {\r\n    dispatch(setClear());\r\n  },\r\n  saveCells: (cells) => {\r\n    dispatch(saveCells(cells));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  running, currentSize, cells, currentPattern,\r\n}) => ({\r\n  running, currentSize, cells, currentPattern,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Game from '../game/Game';\r\nimport SelectButtonsBar from './SelectButtonsBar';\r\nimport PlayButtonsBar from './PlayButtonsBar';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '80px',\r\n    zIndex: 2,\r\n  },\r\n  wrapper: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  game: {\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    '@media (min-width: 1280px)': {\r\n      width: '50%',\r\n    },\r\n  },\r\n  menu: {\r\n    display: 'block',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  verticalMenu: {\r\n    display: 'none',\r\n    width: '25%',\r\n    padding: 2,\r\n    verticalAlign: 'top',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  canvasControls: {\r\n    display: 'block',\r\n    width: '100%',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n      width: '70%',\r\n    },\r\n  },\r\n  canvasReplacementWrapper: {\r\n    paddingBottom: '56.25%',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  canvasReplacement: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: 'hidden',\r\n    background: '#eee',\r\n  },\r\n  progressWrapper: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  loading: {\r\n    position: 'relative',\r\n    animation: 'mui-progress-circular-dash 3s ease infinite',\r\n  },\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boards = [\r\n      {\r\n        name: 'small',\r\n        width: 30,\r\n        height: 20,\r\n        squareSize: 24,\r\n        label: '20 X 30',\r\n      },\r\n      {\r\n        name: 'medium',\r\n        width: 60,\r\n        height: 40,\r\n        squareSize: 12,\r\n        label: '40 X 60',\r\n      },\r\n      {\r\n        name: 'large',\r\n        width: 90,\r\n        height: 60,\r\n        squareSize: 8,\r\n        label: '60 X 90',\r\n      },\r\n    ];\r\n    const params = this.boards[props.currentSize];\r\n    this.patterns = [\r\n      {\r\n        name: 'random',\r\n        label: 'Random',\r\n      },\r\n    ];\r\n    this.boardWidth = params.width;\r\n    this.boardHeight = params.height;\r\n    this.squareSize = params.squareSize;\r\n    this.game = new Game(this.boardWidth, this.boardHeight, this.squareSize, props.cells);\r\n    this.setRunning = running => props.setRunning(running, 'main');\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      window.addEventListener('resize', this.handleWindowSizeChange);\r\n      this.setState({ loading: false });\r\n      const ratio = window.devicePixelRatio || 1;\r\n      this.game.drawBoard(this.canvas, ratio);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    cancelAnimationFrame(this.rAF);\r\n    const liveCellsList = this.game.getLiveCells();\r\n    const { saveCells } = this.props;\r\n    saveCells(liveCellsList);\r\n  }\r\n\r\n  setInterval(value) {\r\n    const { setSpeed } = this.props;\r\n    this.interval = 1000 / value;\r\n    setSpeed(value);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.game.handleWindowSizeChange();\r\n  };\r\n\r\n\r\n  start = () => {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.then = Date.now();\r\n      this.setRunning(true);\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    }\r\n    this.game.drawCell(e);\r\n  }\r\n\r\n  handlePlayToggle() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n\r\n  handlePatternChange(index) {\r\n    const { currentPattern, data, changePattern } = this.props;\r\n    if (index !== currentPattern) {\r\n      this.stop();\r\n      const patterns = [...this.patterns, ...data];\r\n      this.game.setPattern(index, patterns);\r\n      changePattern(index);\r\n    }\r\n  }\r\n\r\n  handleBoardSizeChange(index) {\r\n    const { currentSize, changeBoardSize } = this.props;\r\n    if (index !== currentSize) {\r\n      this.stop();\r\n      const params = this.boards[index];\r\n      this.boardWidth = params.width;\r\n      this.boardHeight = params.height;\r\n      this.squareSize = params.squareSize;\r\n      this.game.reload(this.boardWidth, this.boardHeight, this.squareSize, this.canvas);\r\n      changeBoardSize(index);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.setRunning(false);\r\n      cancelAnimationFrame(this.rAF);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!(this.game.getCellCount() === 0)) {\r\n      const { setClear } = this.props;\r\n      this.stop();\r\n      setClear();\r\n      this.game.clear();\r\n    }\r\n  }\r\n\r\n  step() {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.updateOnce();\r\n    }\r\n  }\r\n\r\n  updateOnce() {\r\n    const { incrementGeneration } = this.props;\r\n    const cellCount = this.game.update();\r\n    incrementGeneration();\r\n    return cellCount;\r\n  }\r\n\r\n  run() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.then;\r\n    let cellCount;\r\n    if (this.delta > this.interval) {\r\n      this.then = this.now - (this.delta % this.interval);\r\n      cellCount = this.updateOnce();\r\n    }\r\n    if (cellCount === 0) {\r\n      this.stop();\r\n    } else {\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes, running, currentPattern, data, currentSize,\r\n    } = this.props;\r\n    const { loading } = this.state;\r\n    const patterns = [...this.patterns, ...data];\r\n    const isRunning = running.main || false;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.game}>\r\n          <div className={classes.menu}>\r\n            <div className={classes.wrapper}>\r\n              <SelectButtonsBar\r\n                patternIndex={currentPattern}\r\n                patterns={patterns}\r\n                parameters={this.boards}\r\n                onPatternChange={index => this.handlePatternChange(index)}\r\n                sizeIndex={currentSize}\r\n                onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.verticalMenu}>\r\n            <SelectButtonsBar\r\n              patternIndex={currentPattern}\r\n              patterns={patterns}\r\n              parameters={this.boards}\r\n              onPatternChange={index => this.handlePatternChange(index)}\r\n              sizeIndex={currentSize}\r\n              onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              direction=\"column\"\r\n            />\r\n          </div>\r\n          <div className={classes.canvasControls}>\r\n            <div className={classes.wrapper}>\r\n              {loading\r\n                && (\r\n                  <div\r\n                    className={classes.canvasReplacementWrapper}\r\n                  >\r\n                    <div className={classes.canvasReplacement}>\r\n                      <div className={classes.progressWrapper}>\r\n                        <CircularProgress\r\n                          size={30}\r\n                          thickness={22}\r\n                          className={classes.loading}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <canvas\r\n                height={0}\r\n                ref={(canvas) => { this.canvas = canvas; }}\r\n                onClick={e => this.handleClick(e)}\r\n              />\r\n            </div>\r\n            <div className=\"controls\">\r\n              <PlayButtonsBar\r\n                on={!isRunning}\r\n                handlePlayToggle={() => this.handlePlayToggle()}\r\n                step={() => this.step()}\r\n                clear={() => this.clear()}\r\n                setInterval={v => this.setInterval(v)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = WrappedComponent => props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPattern {\r\n          edges {\r\n            node {\r\n              name,\r\n              pattern,\r\n              label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data) => {\r\n      const patternlist = data.allPattern.edges.map(item => item.node);\r\n      return (\r\n        <WrappedComponent data={patternlist} {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default withData(withStyles(styles)(Main));\r\n\r\nMain.propTypes = {\r\n  setRunning: PropTypes.func.isRequired,\r\n  running: PropTypes.shape({\r\n    main: PropTypes.bool,\r\n  }),\r\n  classes: PropTypes.shape({}),\r\n  cells: PropTypes.arrayOf(PropTypes.PropTypes.arrayOf(PropTypes.number)),\r\n  data: PropTypes.arrayOf(PropTypes.shape({})),\r\n  changePattern: PropTypes.func.isRequired,\r\n  changeBoardSize: PropTypes.func.isRequired,\r\n  incrementGeneration: PropTypes.func.isRequired,\r\n  setSpeed: PropTypes.func.isRequired,\r\n  setClear: PropTypes.func.isRequired,\r\n  saveCells: PropTypes.func.isRequired,\r\n  currentPattern: PropTypes.number,\r\n  currentSize: PropTypes.number,\r\n};\r\n\r\nMain.defaultProps = {\r\n  classes: {},\r\n  running: {\r\n    main: false,\r\n  },\r\n  currentPattern: 0,\r\n  currentSize: 1,\r\n  data: [],\r\n  cells: null,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Select from './Select';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  item: {\r\n    width: '50%',\r\n    display: 'inline-block',\r\n    maxWidth: 360,\r\n  },\r\n};\r\n\r\nconst SelectButtonsBar = ({\r\n  classes,\r\n  direction,\r\n  patternIndex,\r\n  parameters,\r\n  patterns,\r\n  onPatternChange,\r\n  sizeIndex,\r\n  onBoardSizeChange,\r\n}) => {\r\n  const sizeItems = parameters.map(size => size.label);\r\n  const patternItems = patterns.map(pattern => pattern.label);\r\n  const width = direction === 'column' ? '100%' : null;\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.item} style={{ width }}>\r\n        <Select\r\n          index={patternIndex}\r\n          items={patternItems}\r\n          onChange={onPatternChange}\r\n          label=\"Pattern\"\r\n        />\r\n      </div>\r\n      <div className={classes.item} style={{ width }}>\r\n        <Select\r\n          index={sizeIndex}\r\n          items={sizeItems}\r\n          onChange={onBoardSizeChange}\r\n          label=\"Board Size\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(SelectButtonsBar);\r\n\r\nSelectButtonsBar.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  direction: PropTypes.string,\r\n  patternIndex: PropTypes.number.isRequired,\r\n  patterns: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  onPatternChange: PropTypes.func.isRequired,\r\n  sizeIndex: PropTypes.number.isRequired,\r\n  parameters: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  onBoardSizeChange: PropTypes.func.isRequired,\r\n};\r\n\r\nSelectButtonsBar.defaultProps = {\r\n  direction: 'row',\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nclass Select extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.options = [];\r\n    if (typeof props.items !== 'undefined') {\r\n      this.options = [...props.items];\r\n    }\r\n    this.button = undefined;\r\n    this.state = {\r\n      anchorEl: undefined,\r\n      open: false,\r\n    };\r\n  }\r\n\r\n  handleClickListItem = (event) => {\r\n    this.setState({ open: true, anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index) => {\r\n    const { onChange } = this.props;\r\n    this.setState({ open: false });\r\n    onChange(index);\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes, items, index, label,\r\n    } = this.props;\r\n    const { anchorEl, open } = this.state;\r\n    this.options.length = 0;\r\n    if (typeof items !== 'undefined') {\r\n      this.options = [...items];\r\n    }\r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={this.handleClickListItem}\r\n          >\r\n            {index < 0\r\n              ? (\r\n                <ListItemText\r\n                  primary={label}\r\n                  secondary=\"\"\r\n                />\r\n              )\r\n              : (\r\n                <ListItemText\r\n                  primary={label}\r\n                  secondary={this.options[index]}\r\n                />\r\n              )\r\n            }\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={anchorEl}\r\n          open={open}\r\n          onClose={this.handleRequestClose}\r\n          transitionDuration={250}\r\n        >\r\n          {this.options.map((option, i) => (\r\n            <MenuItem\r\n              key={option}\r\n              selected={i === index}\r\n              onClick={event => this.handleMenuItemClick(event, i)}\r\n            >\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Select);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {\r\n  PlayArrow, Pause, Clear, SkipNext,\r\n} from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SpeedSlider from '../containers/SpeedSlider';\r\nimport Generation from '../containers/Generation';\r\nimport ToggleIcon from './ToggleIcon';\r\nimport color from '../util/colors';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: color.BUTTON,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  vertical: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: 10,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 20,\r\n    },\r\n  },\r\n  bar: {\r\n    margin: 5,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  slider: {\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n  },\r\n  generation: {\r\n    align: 'flex-end',\r\n    marginTop: 5,\r\n    marginRight: 15,\r\n    transform: 'skew(-10deg)',\r\n  },\r\n});\r\n\r\nconst PlayButtonsBar = ({\r\n  classes, on, handlePlayToggle, step, clear, setInterval,\r\n}) => (\r\n  <div className={classes.bar}>\r\n    <div className={classes.controls}>\r\n      <div className={classes.item}>\r\n        <IconButton\r\n          className={classes.button}\r\n          title={on ? 'Start' : 'Pause'}\r\n          onClick={handlePlayToggle}\r\n        >\r\n          <ToggleIcon\r\n            on={on}\r\n            onIcon={<PlayArrow className={classes.icon} />}\r\n            offIcon={<Pause className={classes.icon} />}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <IconButton className={classes.button} title=\"Next Generation\" onClick={step}>\r\n          <SkipNext className={classes.icon} />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <IconButton className={classes.button} title=\"Clear\" onClick={clear}>\r\n          <Clear className={classes.icon} />\r\n        </IconButton>\r\n      </div>\r\n      <div className={classes.slider} title=\"Set Speed\">\r\n        <SpeedSlider onChange={setInterval} />\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div className={classes.generation} title=\"Generation\">\r\n        <Generation />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(PlayButtonsBar);\r\n\r\nPlayButtonsBar.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  handlePlayToggle: PropTypes.func.isRequired,\r\n  on: PropTypes.bool.isRequired,\r\n  step: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  setInterval: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'rc-slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Handle = ({ offset }) => {\r\n  const handleStyle = {\r\n    position: 'absolute',\r\n    transform: 'translate(-35%, -35%)',\r\n    width: '15px',\r\n    height: '15px',\r\n    cursor: 'pointer',\r\n    borderRadius: '50%',\r\n    border: 'solid 3px',\r\n    borderColor: 'rgba(0, 0, 0, .7)',\r\n    backgroundColor: 'white',\r\n    left: `${offset}%`,\r\n  };\r\n  return (\r\n    <div style={handleStyle} />\r\n  );\r\n};\r\n\r\nHandle.propTypes = {\r\n  offset: PropTypes.number.isRequired,\r\n};\r\n\r\nconst sliderStyle = {\r\n  width: 60,\r\n};\r\n\r\nconst handle = ({ fps, ...props }) => (\r\n  <Handle value={fps} style={{ borderColor: 'black' }} {...props} />\r\n);\r\n\r\nclass SpeedSlider extends Component {\r\n  componentDidMount() {\r\n    const { onChange, fps } = this.props;\r\n    onChange(fps);\r\n  }\r\n\r\n  render() {\r\n    const { onChange, fps } = this.props;\r\n\r\n    return (\r\n      <div style={sliderStyle}>\r\n        <Slider\r\n          min={2}\r\n          max={160}\r\n          step={2}\r\n          value={fps}\r\n          onChange={onChange}\r\n          handle={handle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ fps }) => ({ fps });\r\n\r\nexport default (connect(mapStateToProps)(SpeedSlider));\r\n\r\nSpeedSlider.propTypes = {\r\n  fps: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport color from '../util/colors';\r\n\r\nconst styles = {\r\n  generation: {\r\n    color: color.GENERATION,\r\n    fontSize: '1.5em',\r\n    textAlign: 'right',\r\n  },\r\n};\r\n\r\nconst Generation = ({ classes, generation }) => (\r\n  <div className={classes.generation}>\r\n    {generation}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = ({ generation }) => ({ generation });\r\n\r\nexport default (connect(mapStateToProps)(withStyles(styles)(Generation)));\r\n\r\nGeneration.propTypes = {\r\n  classes: PropTypes.shape({}).isRequired,\r\n  generation: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport withRoot from '../withRoot';\r\nimport Layout from '../components/layout';\r\nimport Main from '../containers/Main';\r\n\r\nconst MainPage = () => (\r\n  <Layout>\r\n    <Main />\r\n  </Layout>\r\n);\r\n\r\nexport default withRoot(MainPage);\r\n"],"sourceRoot":""}