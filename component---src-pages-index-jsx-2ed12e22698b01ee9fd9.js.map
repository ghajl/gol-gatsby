{"version":3,"sources":["webpack:///./src/containers/Main.js","webpack:///./src/components/Main.jsx","webpack:///./src/components/SelectButtonsBar.js","webpack:///./src/components/Select.js","webpack:///./src/components/PlayButtonsBar.jsx","webpack:///./src/components/SpeedSlider.js","webpack:///./src/components/Generation.js","webpack:///./src/pages/index.jsx"],"names":["r","_reactRedux","__webpack_require__","_actions","_Main","__esModule","default","l","connect","_ref","running","currentSize","cells","currentPattern","dispatch","changePattern","index","changeBoardSize","size","incrementGeneration","setRunning","name","setSpeed","fps","setClear","saveCells","Main","_react","_propTypes","_interopRequireDefault","_styles","_gatsby","_CircularProgress","_Game","_SelectButtonsBar","_PlayButtonsBar","d","e","p","Object","assign","t","arguments","length","n","prototype","hasOwnProperty","call","apply","this","h","Symbol","iterator","constructor","m","Array","isArray","toString","from","TypeError","b","enumerable","configurable","writable","defineProperty","key","y","setPrototypeOf","getPrototypeOf","__proto__","g","v","ReferenceError","O","value","WrappedComponent","props","_this","_getPrototypeOf","_defineProperty","_assertThisInitialized","game","handleWindowSizeChange","main","getCellCount","then","Date","now","rAF","requestAnimationFrame","run","boards","width","height","squareSize","label","params","patterns","boardWidth","boardHeight","Game","state","loading","Component","window","addEventListener","setState","ratio","devicePixelRatio","drawBoard","canvas","removeEventListener","cancelAnimationFrame","liveCellsList","getLiveCells","interval","stop","drawCell","start","_this$props","data","_toConsumableArray","concat","setPattern","_this$props2","reload","clear","updateOnce","update","_this2","delta","_this3","_this$props3","classes","isRunning","createElement","className","container","menu","wrapper","patternIndex","parameters","onPatternChange","handlePatternChange","sizeIndex","onBoardSizeChange","handleBoardSizeChange","verticalMenu","direction","canvasControls","canvasReplacementWrapper","canvasReplacement","progressWrapper","thickness","circleIndeterminate","animation","ref","onClick","handleClick","on","handlePlayToggle","step","setInterval","withStyles","textAlign","marginTop","zIndex","paddingLeft","paddingRight","display","@media (min-width: 1280px)","@media (orientation: landscape) and (max-width: 1280px)","padding","verticalAlign","paddingBottom","position","top","bottom","left","right","overflow","background","transform","StaticQuery","query","render","patternlist","allPattern","edges","map","item","node","_extends","_","propTypes","PropTypes","func","isRequired","shape","bool","arrayOf","number","defaultProps","_Select","o","SelectButtonsBar","a","i","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","sizeItems","patternItems","pattern","style","items","onChange","s","theme","maxWidth","object","string","justify","patternNamesIndex","patternNames","array","changePatternEvent","patternLabel","gridSizesIndex","gridSizes","changeBoardSizeEventHandler","gridLabel","_List","_ListItem","_ListItemText","_Menu","_MenuItem","f","Select","anchorEl","open","event","currentTarget","options","push","root","button","handleClickListItem","primary","secondary","id","onClose","handleRequestClose","transitionDuration","option","selected","handleMenuItemClick","_icons","_IconButton","_SpeedSlider","_Generation","_ToggleIcon","_colors","PlayButtonsBar","bar","controls","title","onIcon","PlayArrow","icon","offIcon","Pause","SkipNext","Clear","slider","generation","_vertical","color","BUTTON","vertical","breakpoints","up","margin","justifyContent","marginLeft","align","marginRight","_rcSlider","u","c","create","handleStyle","cursor","borderRadius","border","borderColor","backgroundColor","Handle","offset","sliderStyle","handle","Props","SpeedSlider","min","max","_ref2","Generation","jsx","global","GENERATION","_withRoot","_layout"],"mappings":"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","file":"component---src-pages-index-jsx-2ed12e22698b01ee9fd9.js","sourcesContent":["import { connect } from 'react-redux';\r\nimport {\r\n  changePattern, changeBoardSize, incrementGeneration, setRunning, setSpeed, setClear, saveCells,\r\n} from '../actions';\r\nimport Main from '../components/Main';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changePattern: (index) => {\r\n    dispatch(changePattern(index));\r\n  },\r\n  changeBoardSize: (size) => {\r\n    dispatch(changeBoardSize(size));\r\n  },\r\n  incrementGeneration: () => {\r\n    dispatch(incrementGeneration());\r\n  },\r\n  setRunning: (running, name) => {\r\n    dispatch(setRunning(running, name));\r\n  },\r\n  setSpeed: (fps) => {\r\n    dispatch(setSpeed(fps));\r\n  },\r\n  setClear: () => {\r\n    dispatch(setClear());\r\n  },\r\n  saveCells: (cells) => {\r\n    dispatch(saveCells(cells));\r\n  },\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  running, currentSize, cells, currentPattern,\r\n}) => ({\r\n  running, currentSize, cells, currentPattern,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Game from '../game/Game';\r\nimport SelectButtonsBar from './SelectButtonsBar';\r\nimport PlayButtonsBar from './PlayButtonsBar';\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '80px',\r\n    zIndex: 2,\r\n  },\r\n  wrapper: {\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  game: {\r\n    width: '100%',\r\n    display: 'inline-block',\r\n    '@media (min-width: 1280px)': {\r\n      width: '50%',\r\n    },\r\n  },\r\n  menu: {\r\n    display: 'block',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'none',\r\n    },\r\n  },\r\n  verticalMenu: {\r\n    display: 'none',\r\n    width: '25%',\r\n    padding: 2,\r\n    verticalAlign: 'top',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n    },\r\n  },\r\n  canvasControls: {\r\n    display: 'block',\r\n    width: '100%',\r\n    '@media (orientation: landscape) and (max-width: 1280px)': {\r\n      display: 'inline-block',\r\n      width: '70%',\r\n    },\r\n  },\r\n  canvasReplacementWrapper: {\r\n    paddingBottom: '56.25%',\r\n    position: 'relative',\r\n    width: '100%',\r\n  },\r\n  canvasReplacement: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    overflow: 'hidden',\r\n    background: '#eee',\r\n  },\r\n  progressWrapper: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  loading: {\r\n    position: 'relative',\r\n  },\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boards = [\r\n      {\r\n        name: 'small',\r\n        width: 30,\r\n        height: 20,\r\n        squareSize: 24,\r\n        label: '20 X 30',\r\n      },\r\n      {\r\n        name: 'medium',\r\n        width: 60,\r\n        height: 40,\r\n        squareSize: 12,\r\n        label: '40 X 60',\r\n      },\r\n      {\r\n        name: 'large',\r\n        width: 90,\r\n        height: 60,\r\n        squareSize: 8,\r\n        label: '60 X 90',\r\n      },\r\n    ];\r\n    const params = this.boards[props.currentSize];\r\n    this.patterns = [\r\n      {\r\n        name: 'random',\r\n        label: 'Random',\r\n      },\r\n    ];\r\n    this.boardWidth = params.width;\r\n    this.boardHeight = params.height;\r\n    this.squareSize = params.squareSize;\r\n    this.game = new Game(this.boardWidth, this.boardHeight, this.squareSize, props.cells);\r\n    this.setRunning = running => props.setRunning(running, 'main');\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window) {\r\n      window.addEventListener('resize', this.handleWindowSizeChange);\r\n      this.setState({ loading: false });\r\n      const ratio = window.devicePixelRatio || 1;\r\n      this.game.drawBoard(this.canvas, ratio);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (window) window.removeEventListener('resize', this.handleWindowSizeChange);\r\n    cancelAnimationFrame(this.rAF);\r\n    const liveCellsList = this.game.getLiveCells();\r\n    const { saveCells } = this.props;\r\n    saveCells(liveCellsList);\r\n  }\r\n\r\n  setInterval(value) {\r\n    const { setSpeed } = this.props;\r\n    this.interval = 1000 / value;\r\n    setSpeed(value);\r\n  }\r\n\r\n  handleWindowSizeChange = () => {\r\n    this.game.handleWindowSizeChange();\r\n  };\r\n\r\n\r\n  start = () => {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.then = Date.now();\r\n      this.setRunning(true);\r\n      this.rAF = requestAnimationFrame(() => {\r\n        this.run();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    }\r\n    this.game.drawCell(e);\r\n  }\r\n\r\n  handlePlayToggle() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.stop();\r\n    } else {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n\r\n  handlePatternChange(index) {\r\n    const { currentPattern, data, changePattern } = this.props;\r\n    if (index !== currentPattern) {\r\n      this.stop();\r\n      const patterns = [...this.patterns, ...data];\r\n      this.game.setPattern(index, patterns);\r\n      changePattern(index);\r\n    }\r\n  }\r\n\r\n  handleBoardSizeChange(index) {\r\n    const { currentSize, changeBoardSize } = this.props;\r\n    if (index !== currentSize) {\r\n      this.stop();\r\n      const params = this.boards[index];\r\n      this.boardWidth = params.width;\r\n      this.boardHeight = params.height;\r\n      this.squareSize = params.squareSize;\r\n      this.game.reload(this.boardWidth, this.boardHeight, this.squareSize, this.canvas);\r\n      changeBoardSize(index);\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    const { running } = this.props;\r\n    if (running.main) {\r\n      this.setRunning(false);\r\n      cancelAnimationFrame(this.rAF);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    if (!(this.game.getCellCount() === 0)) {\r\n      const { setClear } = this.props;\r\n      this.stop();\r\n      setClear();\r\n      this.game.clear();\r\n    }\r\n  }\r\n\r\n  step() {\r\n    const { running } = this.props;\r\n    if (!(running.main || this.game.getCellCount() === 0)) {\r\n      this.updateOnce();\r\n    }\r\n  }\r\n\r\n  updateOnce() {\r\n    const { incrementGeneration } = this.props;\r\n    this.game.update();\r\n    incrementGeneration();\r\n  }\r\n\r\n  run() {\r\n    this.now = Date.now();\r\n    this.delta = this.now - this.then;\r\n    if (this.delta > this.interval) {\r\n      this.then = this.now - (this.delta % this.interval);\r\n      this.updateOnce();\r\n    }\r\n    this.rAF = requestAnimationFrame(() => {\r\n      this.run();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes, running, currentPattern, data, currentSize,\r\n    } = this.props;\r\n    const { loading } = this.state;\r\n    const patterns = [...this.patterns, ...data];\r\n    const isRunning = running.main || false;\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.game}>\r\n          <div className={classes.menu}>\r\n            <div className={classes.wrapper}>\r\n              <SelectButtonsBar\r\n                patternIndex={currentPattern}\r\n                patterns={patterns}\r\n                parameters={this.boards}\r\n                onPatternChange={index => this.handlePatternChange(index)}\r\n                sizeIndex={currentSize}\r\n                onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className={classes.verticalMenu}>\r\n            <SelectButtonsBar\r\n              patternIndex={currentPattern}\r\n              patterns={patterns}\r\n              parameters={this.boards}\r\n              onPatternChange={index => this.handlePatternChange(index)}\r\n              sizeIndex={currentSize}\r\n              onBoardSizeChange={index => this.handleBoardSizeChange(index)}\r\n              direction=\"column\"\r\n            />\r\n          </div>\r\n          <div className={classes.canvasControls}>\r\n            <div className={classes.wrapper}>\r\n              {loading\r\n                && (\r\n                  <div\r\n                    className={classes.canvasReplacementWrapper}\r\n                  >\r\n                    <div className={classes.canvasReplacement}>\r\n                      <div className={classes.progressWrapper}>\r\n                        <CircularProgress\r\n                          size={30}\r\n                          thickness={22}\r\n                          className={classes.loading}\r\n                          classes={{\r\n                            circleIndeterminate: {\r\n                              animation: 'mui-progress-circular-dash 3s ease infinite',\r\n                            },\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n              <canvas\r\n                height={0}\r\n                ref={(canvas) => { this.canvas = canvas; }}\r\n                onClick={e => this.handleClick(e)}\r\n              />\r\n            </div>\r\n            <div className=\"controls\">\r\n              <PlayButtonsBar\r\n                on={!isRunning}\r\n                handlePlayToggle={() => this.handlePlayToggle()}\r\n                step={() => this.step()}\r\n                clear={() => this.clear()}\r\n                setInterval={v => this.setInterval(v)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst withData = WrappedComponent => props => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query {\r\n        allPattern {\r\n          edges {\r\n            node {\r\n              name,\r\n              pattern,\r\n              label\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data) => {\r\n      const patternlist = data.allPattern.edges.map(item => item.node);\r\n      return (\r\n        <WrappedComponent data={patternlist} {...props} />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default withData(withStyles(styles)(Main));\r\n\r\nMain.propTypes = {\r\n  setRunning: PropTypes.func.isRequired,\r\n  running: PropTypes.shape({\r\n    main: PropTypes.bool,\r\n  }),\r\n  classes: PropTypes.shape({}),\r\n  cells: PropTypes.func.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.shape({})),\r\n  changePattern: PropTypes.func.isRequired,\r\n  changeBoardSize: PropTypes.func.isRequired,\r\n  incrementGeneration: PropTypes.func.isRequired,\r\n  setSpeed: PropTypes.func.isRequired,\r\n  setClear: PropTypes.func.isRequired,\r\n  saveCells: PropTypes.func.isRequired,\r\n  currentPattern: PropTypes.number,\r\n  currentSize: PropTypes.number,\r\n};\r\n\r\nMain.defaultProps = {\r\n  classes: {},\r\n  running: {\r\n    main: false,\r\n  },\r\n  currentPattern: 0,\r\n  currentSize: 1,\r\n  data: [],\r\n};\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from './Select';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  item: {\r\n    width:'50%',\r\n    display: 'inline-block',\r\n    maxWidth: 360,\r\n  },\r\n})\r\n\r\nconst SelectButtonsBar = ({direction, ...props}) => {\r\n  const sizeItems = props.parameters.map(size => size.label);\r\n  const patternItems = props.patterns.map(pattern => pattern.label);\r\n  const width = direction == 'column' ? '100%' : null;\r\n  return (\r\n    <div className={props.classes.container} >\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.patternIndex}\r\n          items={patternItems}\r\n          onChange={(index) => props.onPatternChange(index)}\r\n          label=\"Pattern\"\r\n        />\r\n      </div>\r\n      <div className={props.classes.item} style={{width: width}}>\r\n        <Select\r\n          index={props.sizeIndex}\r\n          items={sizeItems}\r\n          onChange={(index) => props.onBoardSizeChange(index)}\r\n          label=\"Board Size\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SelectButtonsBar);\r\n\r\nSelectButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  direction: PropTypes.string,\r\n  justify: PropTypes.string,\r\n  patternNamesIndex: PropTypes.number.isRequired,\r\n  patternNames: PropTypes.array.isRequired,\r\n  changePatternEvent: PropTypes.func.isRequired,\r\n  patternLabel: PropTypes.string.isRequired,\r\n  gridSizesIndex: PropTypes.number.isRequired,\r\n  gridSizes: PropTypes.array.isRequired,\r\n  changeBoardSizeEventHandler: PropTypes.func.isRequired,\r\n  gridLabel: PropTypes.string.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n  },\r\n};\r\n\r\nclass Select extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.options = [];\r\n    if(typeof props.items !== 'undefined'){\r\n      for(let i=0;i<props.items.length;i++){\r\n        this.options.push(props.items[i]);\r\n      }         \r\n    }\r\n  }\r\n\r\n  state = {\r\n    anchorEl: undefined,\r\n    open: false,\r\n  };\r\n\r\n  button = undefined;\r\n\r\n  handleClickListItem = event => {\r\n    this.setState({ open: true, anchorEl: event.currentTarget, });\r\n  };\r\n\r\n  handleMenuItemClick = (event, index) => {\r\n    this.setState({open: false});\r\n    this.props.onChange(index);\r\n  };\r\n\r\n  handleRequestClose = () => {\r\n    this.setState({open: false});\r\n  };\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    this.options.length = 0;\r\n    if (typeof this.props.items !== 'undefined') {\r\n        for (let i = 0; i < this.props.items.length; i++) {\r\n          this.options.push(this.props.items[i]);\r\n      }         \r\n    }\r\n    \r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n          <ListItem\r\n            button\r\n            onClick={this.handleClickListItem}\r\n          >\r\n          {this.props.index < 0 \r\n            ? (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary=\"\"\r\n              />\r\n            ) \r\n            : (\r\n              <ListItemText\r\n                primary={this.props.label}\r\n                secondary={this.options[this.props.index]}\r\n              />\r\n            )\r\n          }\r\n          </ListItem>\r\n        </List>\r\n        <Menu\r\n          id=\"lock-menu\"\r\n          anchorEl={this.state.anchorEl}\r\n          open={this.state.open}\r\n          onClose={this.handleRequestClose}\r\n          transitionDuration={250}\r\n        >\r\n        {this.options.map((option, index) =>\r\n          <MenuItem\r\n            key={option}\r\n            selected={index === this.props.index}\r\n            onClick={event => this.handleMenuItemClick(event, index)}\r\n          >\r\n            {option}\r\n          </MenuItem>,\r\n        )}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  items: PropTypes.array.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Select);\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { PlayArrow, Pause, Clear, SkipNext } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SpeedSlider from './SpeedSlider';\r\nimport Generation from './Generation';\r\nimport ToggleIcon from './ToggleIcon';\r\nimport color from '../util/colors';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: color.BUTTON,\r\n    width: 35,\r\n    height: 35,\r\n  },\r\n  icon: {\r\n    width: 25,\r\n    height: 25,\r\n  },\r\n  vertical: {\r\n    [theme.breakpoints.up('xs')]: {\r\n      marginTop: 10\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 20\r\n    }\r\n  },\r\n  bar: {\r\n    margin: 5,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n  controls: {\r\n    display: 'flex',\r\n  },\r\n  slider: {\r\n    marginTop: 10,\r\n    marginLeft: 15,\r\n  },\r\n  generation: {\r\n    align: 'flex-end',\r\n    marginTop: 5,\r\n    marginRight: 15,\r\n    transform: 'skew(-10deg)',\r\n   }\r\n});\r\n\r\nconst PlayButtonsBar = ({classes, ...props}) => {\r\n  return (\r\n    <div className={classes.bar}>\r\n      <div className={classes.controls}>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title={props.on?\"Start\":\"Pause\"} onClick={() => props.handlePlayToggle()}>\r\n            <ToggleIcon\r\n              on={props.on}\r\n              onIcon={<PlayArrow className={classes.icon}/>}\r\n              offIcon={<Pause className={classes.icon} />}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Next Generation\" onClick={() => props.step()} >\r\n            <SkipNext className={classes.icon}/>\r\n          </IconButton>\r\n          </div>\r\n        <div  className={classes.item}>\r\n          <IconButton className={classes.button} title=\"Clear\" onClick={() => props.clear()} >\r\n            <Clear  className={classes.icon}/>\r\n          </IconButton>\r\n        </div>\r\n        <div className={classes.slider} title=\"Set Speed\">\r\n          <SpeedSlider onChange={(v) => props.setInterval(v)}/>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div className={classes.generation} title=\"Generation\">\r\n          <Generation />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(PlayButtonsBar);\r\n\r\nPlayButtonsBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handlePlayToggle: PropTypes.func.isRequired,\r\n  on: PropTypes.bool.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  step: PropTypes.func.isRequired,\r\n  clear: PropTypes.func.isRequired,\r\n  setInterval: PropTypes.func.isRequired,\r\n};\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slider from 'rc-slider';\r\nimport { connect } from 'react-redux';\r\n\r\nconst handleStyle = {\r\n  position: 'absolute',\r\n  transform: 'translate(-35%, -35%)',\r\n  width: '15px',\r\n  height: '15px',\r\n  cursor: 'pointer',\r\n  borderRadius: '50%',\r\n  border: 'solid 3px',\r\n  borderColor: 'rgba(0, 0, 0, .7)',\r\n  backgroundColor: 'white',\r\n};\r\n\r\nclass Handle extends Component {\r\n  render() {\r\n    const style = Object.assign({ left: `${this.props.offset}%` }, handleStyle);\r\n    return(\r\n      <div style={style}/>\r\n    )\r\n  }\r\n}\r\n\r\nconst sliderStyle = {    \r\n  width: 60,\r\n  height: 40,\r\n};\r\n\r\nconst handle = ({ fps, ...Props }) => {\r\n  return (\r\n    <Handle value={fps} style={{borderColor: 'black',}} {...Props} />\r\n  );\r\n};\r\n\r\nclass SpeedSlider extends Component {\r\n  componentWillMount() {\r\n      this.props.onChange(this.props.fps)\r\n  }\r\n  render() { \r\n    return (\r\n      <div style={sliderStyle}>\r\n        <Slider\r\n          min={2}\r\n          max={160}\r\n          step={2}\r\n          value={this.props.fps}\r\n          onChange={(v) => this.props.onChange(v)}\r\n          handle={handle}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps =({fps}) => ({fps});\r\n\r\nexport default (connect(mapStateToProps)(SpeedSlider));\r\n\r\nSpeedSlider.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n","/* eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport color from '../util/colors';\r\n\r\nconst Generation =({generation}) => {\r\n  return (\r\n    <div className=\"generation\">\r\n      {generation}\r\n    <style jsx global>{`\r\n      .generation {\r\n        color: ${color.GENERATION};\r\n        font-size: 1.5em;\r\n        text-align: right;\r\n      }\r\n    `}</style>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({generation}) => ({generation});\r\n\r\nexport default (connect(mapStateToProps)(Generation));\r\n\r\nGeneration.propTypes = {\r\n  generation: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport withRoot from '../withRoot';\r\nimport Layout from '../components/layout';\r\nimport Main from '../containers/Main';\r\n\r\nconst MainPage = ({ ...props }) => (\r\n  <Layout>\r\n    <Main {...props} />\r\n  </Layout>\r\n);\r\n\r\nexport default withRoot(MainPage);\r\n"],"sourceRoot":""}